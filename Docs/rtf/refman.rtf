{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment BD_COUPE  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}BD_COUPE}
{\comment Generated by doxygen 1.9.4.}
{\creatim \yr2022\mo6\dy3\hr12\min48\sec27}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt BD_COUPE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Fri Jun 3 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b BDadosCoupe} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CAMPO} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaGenerica} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NOG} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TABELA} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b BDadosCoupe.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b BDadosCoupe.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b ListaGenerica.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b ListaGenerica.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BDadosCoupe Struct Reference\par \pard\plain 
{\tc\tcl2 \v BDadosCoupe}
{\xe \v BDadosCoupe}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\f2 #include <BDadosCoupe.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b NOME_BDADOS} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b VERSAO_BDADOS} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaGenerica} * {\b LTabelas}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v LTabelas\:BDadosCoupe}
{\xe \v BDadosCoupe\:LTabelas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaGenerica}* BDadosCoupe::LTabelas}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NOME_BDADOS\:BDadosCoupe}
{\xe \v BDadosCoupe\:NOME_BDADOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char BDadosCoupe::NOME_BDADOS[50]}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VERSAO_BDADOS\:BDadosCoupe}
{\xe \v BDadosCoupe\:VERSAO_BDADOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char BDadosCoupe::VERSAO_BDADOS[50]}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b BDadosCoupe.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CAMPO Struct Reference\par \pard\plain 
{\tc\tcl2 \v CAMPO}
{\xe \v CAMPO}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\f2 #include <BDadosCoupe.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b NOME_CAMPO} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b TIPO} [10]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v NOME_CAMPO\:CAMPO}
{\xe \v CAMPO\:NOME_CAMPO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CAMPO::NOME_CAMPO[50]}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TIPO\:CAMPO}
{\xe \v CAMPO\:TIPO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CAMPO::TIPO[10]}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b BDadosCoupe.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListaGenerica Struct Reference\par \pard\plain 
{\tc\tcl2 \v ListaGenerica}
{\xe \v ListaGenerica}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
{
{\f2 #include <ListaGenerica.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NOG} * {\b Inicio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NOG} * {\b Fim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NEL}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Fim\:ListaGenerica}
{\xe \v ListaGenerica\:Fim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NOG}* ListaGenerica::Fim}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Inicio\:ListaGenerica}
{\xe \v ListaGenerica\:Inicio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NOG}* ListaGenerica::Inicio}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NEL\:ListaGenerica}
{\xe \v ListaGenerica\:NEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ListaGenerica::NEL}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b ListaGenerica.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NOG Struct Reference\par \pard\plain 
{\tc\tcl2 \v NOG}
{\xe \v NOG}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
{
{\f2 #include <ListaGenerica.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b Info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b NOG} * {\b Prox}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Info\:NOG}
{\xe \v NOG\:Info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* NOG::Info}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Prox\:NOG}
{\xe \v NOG\:Prox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b NOG}* NOG::Prox}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b ListaGenerica.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TABELA Struct Reference\par \pard\plain 
{\tc\tcl2 \v TABELA}
{\xe \v TABELA}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
{
{\f2 #include <BDadosCoupe.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b NOME_TABELA} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaGenerica} * {\b LCampos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaGenerica} * {\b LRegistos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v LCampos\:TABELA}
{\xe \v TABELA\:LCampos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaGenerica}* TABELA::LCampos}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LRegistos\:TABELA}
{\xe \v TABELA\:LRegistos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaGenerica}* TABELA::LRegistos}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NOME_TABELA\:TABELA}
{\xe \v TABELA\:NOME_TABELA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char TABELA::NOME_TABELA[50]}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/{\b BDadosCoupe.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.c}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.c}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "BDadosCoupe.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIXED_SIZE_ARRAY}\~ 50L\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POINTERSIZE}\~ 8L\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STATISTICS_FILE}\~ "statistics.csv"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char * {\b string}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BDadosCoupe} * {\b Criar_BDados} (char *nome_bd, char *versao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Criar_BDados: A) Criar a Base de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TABELA} * {\b Criar_Tabela} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B) Creates a table inside DB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Campo_Tabela} ({\b TABELA} *T, char *nome_campo, char *tipo_campo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a field to the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Valores_Tabela} ({\b TABELA} *T, char *dados)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new value to the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Valores_Tabela_BDados} ({\b BDadosCoupe} *BD, char *nome_tabela, char *dados)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TABELA} * {\b Pesquisar_Tabela} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Search a table }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_Tabela_NOME} ({\b BDadosCoupe} *BD, char *tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows to the user the content of the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_Tabela} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show a table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows all the tables inside the database }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Destruir_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Remove all content and dealoc the database }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long int {\b Memoria_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows how much memory the intire DB ocupies in BYTES }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long int {\b Memoria_Desperdicada_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows the wasted memory caused by fixed array size inside some structs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_Tabela_BDados_Excel} ({\b BDadosCoupe} *BD, char *tabela, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the table to CSV file }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_BDados_Excel} ({\b BDadosCoupe} *BD, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the intire DB to CSV File }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createStatistics} (const char *FunctionName, clock_t start, clock_t end)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to store execution performance statistics and log.Saves the statistics in \par
 statistics.csv. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b scan} (char **pp, char c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b string} * {\b splitString} (const char *inputString)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split a string with a ;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Importar_BDados_Excel} ({\b BDadosCoupe} *BD, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the user to import a CSV file to restore de BD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_BDados_Ficheiro_Binario} ({\b BDadosCoupe} *BD, char *fich_dat)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export the database for a binary file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Importar_BDados_Ficheiro_Binario} ({\b BDadosCoupe} *BD, char *file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Import a binary file to restore the BD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destroy_info_string} (void *info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destroy_info} (void *info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE_TABLE_DATA} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data inside the table.Does not remove table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE_TABLE_FIELDS} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data field\par
 Warning. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DROP_TABLE} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the content of the table and drop it. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printResultNode} ({\b NOG} *node)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showHeaderTable} ({\b NOG} *node, char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SELECT} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *nome_campo, char *valor_comparacao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a select in a table with options. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeRegister} ({\b ListaGenerica} *l, {\b NOG} *element)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a REGISTER node from a linked List. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *nome_campo, char *valor_comparacao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateREGISTER} ({\b NOG} *r, int field_pos, char *newValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update a REGISTER node with a new value based on the field_position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b UPDATE} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *campo_comp, char *valor_campo_comp, char *nome_campo_update, char *valor_campo_update)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a SQL UPDATE to the BD with somo options. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FIXED_SIZE_ARRAY\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:FIXED_SIZE_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIXED_SIZE_ARRAY\~ 50L}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POINTERSIZE\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:POINTERSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POINTERSIZE\~ 8L}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STATISTICS_FILE\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:STATISTICS_FILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STATISTICS_FILE\~ "statistics.csv"}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v string\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char* {\b string}}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Add_Campo_Tabela\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Add_Campo_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Campo_Tabela ({\b TABELA} *  {\i T}, char *  {\i nome_campo}, char *  {\i tipo_campo})}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a field to the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{TABELA* : Table Pointer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{char* : Field name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tipo_campo} \cell }{char* : Field type (INT, STRING, CHAR, FLOAT) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int : Returns SUCESSO/INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                                                     \{\par
50     {\cf19 if} (!T) {\cf19 return} INSUCESSO;\par
51     CAMPO *campo = (CAMPO *) malloc({\cf17 sizeof}(CAMPO));\par
52     strcpy(campo->NOME_CAMPO, nome_campo);\par
53     strcpy(campo->TIPO, tipo_campo);\par
54     {\cf19 return} AddLG(T->LCampos, campo);\par
55 \}\par
}
}
{\xe \v Add_Valores_Tabela\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Add_Valores_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Valores_Tabela ({\b TABELA} *  {\i T}, char *  {\i dados})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new value to the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{- Pointer table \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dados} \cell }{- String of data splitted with; ex 1;car;volvo \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Returns SUCESSO/INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                \{\par
64     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
65     {\cf19 if} (dados) \{\par
66         {\cf18 char} *tmp = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(dados) + 1));\par
67         strcpy(tmp, dados);\par
68         {\cf18 char} *data = strtok(tmp, {\cf22 ";"});\par
69         REGISTO *row = CriarLG();\par
70         {\cf19 while} (data != NULL) \{\par
71             {\cf18 char} *registo = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(data) + 1));\par
72             strcpy(registo, data);\par
73             data = strtok(NULL, {\cf22 ";"});\par
74             AddLG(row, registo);\par
75         \}\par
76         AddLG(T->LRegistos, row);\par
77         tmp = NULL;\par
78         free(tmp);\par
79         {\cf19 return} SUCESSO;\par
80     \}\par
81     {\cf19 return} INSUCESSO;\par
82 \}\par
}
}
{\xe \v Add_Valores_Tabela_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Add_Valores_Tabela_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Valores_Tabela_BDados ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela}, char *  {\i dados})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{:Name of table \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dados} \cell }{:Data to be inserted in the table.\par
Note: Data must be a string with with values separated by character ; \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: SUCESSO - Case of success\par
 :INSUCESSO - Case of fail \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                                                                \{\par
94     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
95     {\cf19 if} (!nome_tabela){\cf19 return} INSUCESSO;\par
96     {\cf19 if} (!dados){\cf19 return} INSUCESSO;\par
97     {\cf18 char} *tbl_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(nome_tabela) + 1);\par
98     strcpy(tbl_name, nome_tabela);\par
99     TABELA *T = Pesquisar_Tabela(BD, strupr(tbl_name));\par
100     free(tbl_name);\par
101     {\cf19 if} (T) \{\par
102         {\cf19 return} Add_Valores_Tabela(T, dados);\par
103     \}\par
104     {\cf19 return} INSUCESSO;\par
105 \}\par
}
}
{\xe \v createStatistics\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:createStatistics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createStatistics (const char *  {\i FunctionName}, clock_t  {\i start}, clock_t  {\i end})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to store execution performance statistics and log.Saves the statistics in \par
 statistics.csv. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FunctionName} \cell }{:Name of the function to cron \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{:Start timestampo \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end} \cell }{:End timestamp \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 436                                                                             \{\par
437     FILE *Time;\par
438     time_t t = time(NULL);\par
439     {\cf17 struct }tm tm = *localtime(&t);\par
440     Time = fopen(STATISTICS_FILE, {\cf22 "a"});\par
441     {\cf18 double} time_spent = (double) (end - start) / CLOCKS_PER_SEC;\par
442     fprintf(Time, {\cf22 "%d-%02d-%02d %02d:%02d:%02d %s:%fms\\n"}, tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour,\par
443             tm.tm_min, tm.tm_sec, FunctionName, time_spent);\par
444     fclose(Time);\par
445 \}\par
}
}
{\xe \v Criar_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Criar_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BDadosCoupe} * Criar_BDados (char *  {\i nome_bd}, char *  {\i versao})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Criar_BDados: A) Criar a Base de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_bd} \cell }{char* : DB name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i versao} \cell }{char* : DB version \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BDadosCoupe* : Pointer to created database \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                        \{\par
18     BDadosCoupe *BD = (BDadosCoupe *) malloc({\cf17 sizeof}(BDadosCoupe));\par
19     strcpy(BD->NOME_BDADOS, nome_bd);\par
20     strcpy(BD->VERSAO_BDADOS, versao);\par
21     BD->LTabelas = CriarLG();\par
22     {\cf19 return} BD;\par
23 \}\par
}
}
{\xe \v Criar_Tabela\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Criar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TABELA} * Criar_Tabela ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B) Creates a table inside DB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{BDadosCoupe* : Pointer to database \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{char* : table name \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
TABELA* : Returns a pointer to the created table. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: AS,HS,PC \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                                          \{\par
33     TABELA *table = (TABELA *) malloc({\cf17 sizeof}(TABELA));\par
34     {\cf20 //The table name is converted to UPPERCASE for normalize user input}\par
35     strcpy(table->NOME_TABELA, strupr(nome_tabela));\par
36     table->LCampos = CriarLG();\par
37     table->LRegistos = CriarLG();\par
38     AddLG(BD->LTabelas, table);\par
39     {\cf19 return} table;\par
40 \}\par
}
}
{\xe \v DELETE\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:DELETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i nome_campo}, char *  {\i valor_comparacao})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{:Table to perfom the delete \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure for filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{: Name to the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_comparacao} \cell }{:Value to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 947                                                                                                                     \{\par
948     {\cf20 //createStatistics metrics}\par
949     clock_t start, end;\par
950     start = clock();\par
951 \par
952     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
953     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
954     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
955     {\cf19 if} (!strlen(nome_campo)){\cf19 return} INSUCESSO;\par
956     {\cf19 if} (!strlen(valor_comparacao)){\cf19 return} INSUCESSO;\par
957 \par
958     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
959     {\cf19 if} (table) \{\par
960         {\cf20 //Check if the nome campo exists}\par
961         NOG *field = table->LCampos->Inicio;\par
962         {\cf18 int} i = 0;\par
963         {\cf18 int} field_found = 0;\par
964         {\cf18 int} field_pos;\par
965         {\cf19 while} (field) \{\par
966             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo) == 0) \{\par
967                 field_found = 1;\par
968                 field_pos = i;\par
969                 {\cf19 break};\par
970             \}\par
971             i++;\par
972             field = field->Prox;\par
973         \}\par
974         {\cf19 if} (!field_found) \{\par
975             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
976             {\cf19 return} INSUCESSO;\par
977         \}\par
978 \par
979         showHeaderTable(table->LCampos->Inicio, {\cf22 "DROP"});\par
980         {\cf18 int} register_count = 0;\par
981         {\cf20 //Pointer to the REGISTOS List}\par
982         NOG *node = table->LRegistos->Inicio;\par
983         {\cf18 int} found = 0;\par
984         {\cf19 while} (node) \{\par
985             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
986             {\cf18 int} pos = 0;\par
987             {\cf19 while} (p) \{\par
988                 {\cf19 if} (field_pos == pos) \{\par
989                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_comparacao)) \{\par
990                         printResultNode(node);\par
991                         found = 1;\par
992                         register_count++;\par
993                     \}\par
994                 \}\par
995                 pos++;\par
996                 p = p->Prox;\par
997             \}\par
998             {\cf19 if} (found) \{\par
999                 removeRegister(table->LRegistos, node);\par
1000                 found = 0;\par
1001             \}\par
1002             node = node->Prox;\par
1003         \}\par
1004         printf({\cf22 "+------------------------------------------+\\n"});\par
1005         printf({\cf22 "Foram encontrado(s) %d registos\\n\\n\\n"}, register_count);\par
1006 \par
1007     \}\par
1008     end = clock();\par
1009     createStatistics(__FUNCTION__, start, end);\par
1010     {\cf19 return} SUCESSO;\par
1011 \}\par
}
}
{\xe \v DELETE_TABLE_DATA\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:DELETE_TABLE_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE_TABLE_DATA ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data inside the table.Does not remove table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:table to empty \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 723                                  \{\par
724     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
725     NOG *registerListNode = T->LRegistos->Inicio;\par
726     {\cf20 //Destroy the List inside each node->info}\par
727     {\cf19 while} (registerListNode) \{\par
728         DestruirLG(registerListNode->Info, destroy_info_string);\par
729         registerListNode = registerListNode->Prox;\par
730     \}\par
731     {\cf20 //Destroy the List.The data (info) is already removed above}\par
732     {\cf20 //DestruirLG(T->LRegistos, destroy_info);}\par
733     DestruirLG(T->LRegistos, NULL);\par
734 \par
735     {\cf20 //Create a new List and add it empty}\par
736     T->LRegistos = CriarLG();\par
737     {\cf19 return} SUCESSO;\par
738 \}\par
}
}
{\xe \v DELETE_TABLE_FIELDS\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:DELETE_TABLE_FIELDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE_TABLE_FIELDS ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data field\par
 Warning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:table to empty \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 745                                    \{\par
746     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
747     {\cf19 if} (T->LCampos->NEL > 0) \{\par
748         NOG *node = T->LCampos->Inicio;\par
749         {\cf19 while} (node) \{\par
750             NOG *aux = node;\par
751             free(aux->Info);\par
752             node = aux->Prox;\par
753             free(aux);\par
754             T->LCampos->NEL--;\par
755         \}\par
756         {\cf19 return} SUCESSO;\par
757     \}\par
758     {\cf19 return} INSUCESSO;\par
759 \}\par
}
}
{\xe \v destroy_info\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:destroy_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destroy_info (void *  {\i info})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 715                               \{\par
716     printf({\cf22 "Info is already free\\n"});\par
717 \}\par
}
}
{\xe \v destroy_info_string\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:destroy_info_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destroy_info_string (void *  {\i info})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 707                                      \{\par
708     {\cf20 //this info is a string pointer}\par
709     free(info);\par
710     {\cf20 //Force the info to be NULL - optional but cleaner and safer}\par
711     info = NULL;\par
712 \par
713 \}\par
}
}
{\xe \v Destruir_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Destruir_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Destruir_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Remove all content and dealoc the database }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                       \{\par
202     {\cf19 if} (!BD){\cf19 return};\par
203     {\cf19 if} (BD->LTabelas->NEL > 0) \{\par
204         {\cf19 while} (BD->LTabelas->NEL) \{\par
205             TABELA *inicio = BD->LTabelas->Inicio->Info;\par
206             DROP_TABLE(BD, inicio->NOME_TABELA);\par
207         \}\par
208     \}\par
209     free(BD->LTabelas);\par
210     BD->LTabelas = NULL;\par
211     printf({\cf22 "%s\\n"}, BD->NOME_BDADOS);\par
212     printf({\cf22 "Destruindo BD"});\par
213     free(BD);\par
214 \par
215 \par
216 \}\par
}
}
{\xe \v DROP_TABLE\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:DROP_TABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DROP_TABLE ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the content of the table and drop it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{:Name of the table to drop \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 767                                                    \{\par
768     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
769     {\cf19 if} (strlen(nome_tabela) < 1){\cf19 return} INSUCESSO;\par
770     TABELA *t = Pesquisar_Tabela(BD, nome_tabela);\par
771     {\cf19 if} (t) \{\par
772         {\cf20 //printf("Droping table %s\\n", t->NOME_TABELA);}\par
773         NOG *P = BD->LTabelas->Inicio;\par
774         NOG *Ant = NULL;\par
775         {\cf18 int} STOP = 0;\par
776         {\cf19 while} (P && !STOP) \{\par
777             {\cf19 if} (P->Info == t) {\cf20 // if (func(P->Info, cc) == 1)}\par
778             \{\par
779                 {\cf20 // Vou ter de remover o P}\par
780                 STOP = 1;\par
781             \} {\cf19 else} \{\par
782                 Ant = P;\par
783                 P = P->Prox;\par
784             \}\par
785         \}\par
786         {\cf20 // Agora ou encontrei ou n?o}\par
787         {\cf19 if} (STOP == 1) \{\par
788             {\cf20 // Remover o que est? no P}\par
789             {\cf19 if} (Ant)\par
790                 Ant->Prox = P->Prox;\par
791             {\cf19 else} {\cf20 // Caso do inicio}\par
792                 BD->LTabelas->Inicio = P->Prox;\par
793 \par
794             DELETE_TABLE_DATA(t);\par
795             DELETE_TABLE_FIELDS(t);\par
796             free(P->Info);\par
797             free(P);\par
798             BD->LTabelas->NEL--;\par
799             {\cf19 return} SUCESSO;\par
800 \par
801         \}\par
802         {\cf19 return} INSUCESSO;\par
803 \par
804 \par
805         {\cf19 return} SUCESSO;\par
806     \}\par
807     {\cf19 return} INSUCESSO;\par
808 \}\par
}
}
{\xe \v Exportar_BDados_Excel\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Exportar_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the intire DB to CSV File }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: file to export.Extension is added automaticly in case of missing \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 368                                                               \{\par
369     {\cf19 if} (!BD) {\cf19 return} -1;\par
370     {\cf19 if} (!ficheir_csv) {\cf19 return} -1;\par
371 \par
372     FILE *ExpBD;\par
373     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
374     {\cf18 char} *file_name = NULL;\par
375     scanf({\cf22 "%s"}, ficheir_csv);\par
376     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
377     {\cf20 //Handle file passed with extension or just file name}\par
378     {\cf19 if} (!have_extension) \{\par
379         {\cf20 //Passed file has no extension.We add it for you :-)}\par
380         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
381         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
382         strcpy(file_name, ficheir_csv);\par
383         strcat(file_name, extension);\par
384     \} {\cf19 else} \{\par
385         {\cf20 //Passed file has extension. All good to go :)}\par
386         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
387         strcpy(file_name, ficheir_csv);\par
388     \}\par
389 \par
390     ExpBD = fopen(file_name, {\cf22 "w"});\par
391     {\cf19 if} (ExpBD) \{\par
392         NOG *n = BD->LTabelas->Inicio;\par
393         fprintf(ExpBD, {\cf22 "%s\\n"}, BD->NOME_BDADOS);\par
394         fprintf(ExpBD, {\cf22 "%s\\n"}, BD->VERSAO_BDADOS);\par
395         fprintf(ExpBD, {\cf22 "%d\\n"}, BD->LTabelas->NEL);\par
396         {\cf19 while} (n) \{\par
397             TABELA *t = (TABELA *) n->Info;\par
398             NOG *Aux = t->LCampos->Inicio;\par
399             fprintf(ExpBD, {\cf22 "%s\\n"}, t->NOME_TABELA);\par
400             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LCampos->NEL);\par
401             {\cf19 while} (Aux) \{\par
402                 CAMPO *C = (CAMPO *) Aux->Info;\par
403                 fprintf(ExpBD, {\cf22 "%s|%s;"}, C->NOME_CAMPO, C->TIPO);\par
404                 Aux = Aux->Prox;\par
405             \}\par
406             fprintf(ExpBD, {\cf22 "\\n"});\par
407             Aux = t->LRegistos->Inicio;\par
408             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LRegistos->NEL);\par
409             {\cf19 while} (Aux) \{\par
410                 ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
411                 NOG *P = R->Inicio;\par
412                 while (P) \{\par
413                     fprintf(ExpBD, {\cf22 "%s;"}, (REGISTO *) P->Info);\par
414                     P = P->Prox;\par
415                 \}\par
416                 fprintf(ExpBD, {\cf22 "\\n"});\par
417                 Aux = Aux->Prox;\par
418             \}\par
419             n = n->Prox;\par
420             fprintf(ExpBD, {\cf22 "\\n"});\par
421         \}\par
422         fclose(ExpBD);\par
423         free(file_name);\par
424         {\cf19 return} SUCESSO;\par
425     \}\par
426     free(file_name);\par
427     {\cf19 return} INSUCESSO;\par
428 \}\par
}
}
{\xe \v Exportar_BDados_Ficheiro_Binario\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Exportar_BDados_Ficheiro_Binario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_BDados_Ficheiro_Binario ({\b BDadosCoupe} *  {\i BD}, char *  {\i fich_dat})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export the database for a binary file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{- Datgabase name to use \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fich_dat} \cell }{File name to write binary \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the export \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 569                                                                       \{\par
570     {\cf19 if} (!BD) {\cf19 return} -1;\par
571     {\cf19 if} (!fich_dat) {\cf19 return} -1;\par
572 \par
573     {\cf18 char} extensiondat[5] = {\cf22 ".dat"};\par
574     {\cf18 char} *file_namedat = NULL;\par
575     {\cf18 char} *have_extensiondat = strstr(fich_dat, {\cf22 ".dat"});\par
576     {\cf20 //Handle file passed with extension or just file name}\par
577     {\cf19 if} (!have_extensiondat) \{\par
578         {\cf20 //Passed file has no extension.We add it for you :-)}\par
579         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
580         file_namedat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(fich_dat) + strlen(extensiondat) + 1);\par
581         strcpy(file_namedat, fich_dat);\par
582         strcat(file_namedat, extensiondat);\par
583     \} {\cf19 else} \{\par
584         {\cf20 //Passed file has extension. All good to go :)}\par
585         file_namedat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(fich_dat) + 1);\par
586         strcpy(file_namedat, fich_dat);\par
587     \}\par
588 \par
589     FILE *ExpBD;\par
590     ExpBD = fopen(file_namedat, {\cf22 "wb"});\par
591 \par
592     NOG *n = BD->LTabelas->Inicio;\par
593     fwrite(BD->NOME_BDADOS, 50, 1, ExpBD);\par
594     fwrite(BD->VERSAO_BDADOS, 50, 1, ExpBD);\par
595     fwrite(&BD->LTabelas->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
596     {\cf19 while} (n) \{\par
597         TABELA *t = (TABELA *) n->Info;\par
598         NOG *Aux = t->LCampos->Inicio;\par
599         fwrite(t->NOME_TABELA, 50, 1, ExpBD);\par
600         fwrite(&t->LCampos->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
601         {\cf19 while} (Aux) \{\par
602             CAMPO *C = (CAMPO *) Aux->Info;\par
603             fwrite(C, {\cf17 sizeof}(CAMPO), 1, ExpBD);\par
604             Aux = Aux->Prox;\par
605         \}\par
606 \par
607         Aux = t->LRegistos->Inicio;\par
608         fwrite(&t->LRegistos->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
609         {\cf19 while} (Aux) \{\par
610 \par
611             ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
612             NOG *x = R->Inicio;\par
613             while (x) \{\par
614                 {\cf18 int} M = strlen(x->Info) + 1;\par
615                 fwrite(&M, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
616                 fwrite(x->Info, {\cf17 sizeof}({\cf18 char}), M, ExpBD);\par
617                 x = x->Prox;\par
618             \}\par
619             Aux = Aux->Prox;\par
620         \}\par
621         n = n->Prox;\par
622     \}\par
623     fclose(ExpBD);\par
624     free(file_namedat);\par
625     {\cf19 return} SUCESSO;\par
626 \}\par
}
}
{\xe \v Exportar_Tabela_BDados_Excel\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Exportar_Tabela_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_Tabela_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i tabela}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the table to CSV file }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tabela} \cell }{:Pointer to a table to export \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: file to export.Extension is added automaticly in case of missing \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 301                                                                                    \{\par
302     {\cf19 if} (!BD) {\cf19 return} -1;\par
303     {\cf19 if} (!tabela) {\cf19 return} -1;\par
304     {\cf19 if} (!ficheir_csv) {\cf19 return} -1;\par
305 \par
306     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
307     {\cf18 char} *file_name = NULL;\par
308 \par
309     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
310     {\cf20 //Handle file passed with extension or just file name}\par
311     {\cf19 if} (!have_extension) \{\par
312         {\cf20 //Passed file has no extension.We add it for you :-)}\par
313         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
314         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
315         strcpy(file_name, ficheir_csv);\par
316         strcat(file_name, extension);\par
317     \} {\cf19 else} \{\par
318         {\cf20 //Passed file has extension. All good to go :)}\par
319         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
320         strcpy(file_name, ficheir_csv);\par
321     \}\par
322     FILE *ExpBD;\par
323     ExpBD = fopen(file_name, {\cf22 "w"});\par
324     {\cf19 if} (ExpBD) \{\par
325         TABELA *t = Pesquisar_Tabela(BD, tabela);\par
326         {\cf19 if} (t) \{\par
327             NOG *Aux = t->LCampos->Inicio;\par
328             fprintf(ExpBD, {\cf22 "%s\\n"}, t->NOME_TABELA);\par
329             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LCampos->NEL);\par
330             {\cf19 while} (Aux) \{\par
331                 CAMPO *C = (CAMPO *) Aux->Info;\par
332                 fprintf(ExpBD, {\cf22 "%s|%s;"}, C->NOME_CAMPO, C->TIPO);\par
333                 Aux = Aux->Prox;\par
334             \}\par
335             fprintf(ExpBD, {\cf22 "\\n"});\par
336             Aux = t->LRegistos->Inicio;\par
337             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LRegistos->NEL);\par
338             {\cf19 while} (Aux) \{\par
339                 ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
340                 NOG *P = R->Inicio;\par
341                 while (P) \{\par
342                     fprintf(ExpBD, {\cf22 "%s;"}, (REGISTO *) P->Info);\par
343                     P = P->Prox;\par
344                 \}\par
345                 fprintf(ExpBD, {\cf22 "\\n"});\par
346                 Aux = Aux->Prox;\par
347             \}\par
348             fclose(ExpBD);\par
349             free(file_name);\par
350             {\cf19 return} SUCESSO;\par
351         \}\par
352         printf({\cf22 "Esta tabela nao existe !!!\\n"});\par
353         fclose(ExpBD);\par
354         free(file_name);\par
355         {\cf19 return} INSUCESSO;\par
356     \}\par
357     printf({\cf22 "Nao foi possivel escrever esse ficheiro\\n"});\par
358     free(file_name);\par
359     {\cf19 return} INSUCESSO;\par
360 \}\par
}
}
{\xe \v Importar_BDados_Excel\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Importar_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Importar_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the user to import a CSV file to restore de BD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: File CSV with the exported data \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 485                                                               \{\par
486     {\cf19 if} (!BD) {\cf19 return} INSUCESSO;\par
487     {\cf19 if} (!ficheir_csv) {\cf19 return} INSUCESSO;\par
488 \par
489     FILE *ExpBD;\par
490 \par
491     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
492     {\cf18 char} *file_name = NULL;\par
493     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
494     {\cf20 //Handle file passed with extension or just file name}\par
495     {\cf19 if} (!have_extension) \{\par
496         {\cf20 //Passed file has no extension.We add it for you :-)}\par
497         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
498         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
499         strcpy(file_name, ficheir_csv);\par
500         strcat(file_name, extension);\par
501     \} {\cf19 else} \{\par
502         {\cf20 //Passed file has extension. All good to go :)}\par
503         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
504         strcpy(file_name, ficheir_csv);\par
505     \}\par
506 \par
507     ExpBD = fopen(file_name, {\cf22 "r"});\par
508     {\cf19 if} (ExpBD == NULL) \{\par
509         printf({\cf22 "Erro!\\n"});\par
510         {\cf19 return} INSUCESSO;\par
511     \}\par
512     {\cf18 int} nt = 0;\par
513 \par
514     fscanf(ExpBD, {\cf22 "%s"}, BD->NOME_BDADOS);\par
515     {\cf20 //Read the database version}\par
516     fscanf(ExpBD, {\cf22 "%s"}, BD->VERSAO_BDADOS);\par
517     {\cf20 //Read the number of tables stored}\par
518     fscanf(ExpBD, {\cf22 "%d"}, &nt);\par
519 \par
520     {\cf18 char} NomeTABELA[50];\par
521     {\cf18 char} LerCampos[50];\par
522     {\cf18 char} LerRegistos[50];\par
523     {\cf18 int} nCampos;\par
524     {\cf18 int} nRegistos;\par
525 \par
526 \par
527     {\cf19 for} ({\cf18 int} i = 0; i < nt; i++) \{\par
528         fscanf(ExpBD, {\cf22 "%s"}, NomeTABELA);\par
529         TABELA *nomeTb = Criar_Tabela(BD, NomeTABELA);\par
530         fscanf(ExpBD, {\cf22 "%d"}, &nCampos);\par
531         fscanf(ExpBD, {\cf22 "%s"}, LerCampos);\par
532 \par
533         {\cf18 char} *tmp = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(LerCampos) + 1));\par
534         strcpy(tmp, LerCampos);\par
535 \par
536         {\cf18 char} *data = strtok(tmp, {\cf22 ";"});\par
537         {\cf19 while} (data != NULL) \{\par
538             {\cf18 char} *registo = ({\cf18 char} *) malloc((strlen(data) + 1));\par
539             strcpy(registo, data);\par
540             data = strtok(NULL, {\cf22 ";"});\par
541             {\cf18 string} *parts = splitString(registo);\par
542             Add_Campo_Tabela(nomeTb, parts[0], parts[1]);\par
543             free(parts);\par
544             free(registo);\par
545         \}\par
546         free(tmp);\par
547         tmp = NULL;\par
548 \par
549         {\cf20 //Read the table data}\par
550         fscanf(ExpBD, {\cf22 "%d"}, &nRegistos);\par
551         {\cf19 for} ({\cf18 int} b = 0; b < nRegistos; b++) \{\par
552             fscanf(ExpBD, {\cf22 "%s"}, LerRegistos);\par
553             Add_Valores_Tabela(nomeTb, LerRegistos);\par
554         \}\par
555     \}\par
556 \par
557     fclose(ExpBD);\par
558     free(file_name);\par
559     {\cf19 return} SUCESSO;\par
560 \}\par
}
}
{\xe \v Importar_BDados_Ficheiro_Binario\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Importar_BDados_Ficheiro_Binario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Importar_BDados_Ficheiro_Binario ({\b BDadosCoupe} *  {\i BD}, char *  {\i file})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Import a binary file to restore the BD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{:File to be loades \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 634                                                                   \{\par
635 \par
636     {\cf19 if} (!BD) {\cf19 return} INSUCESSO;\par
637     {\cf19 if} (!file) {\cf19 return} INSUCESSO;\par
638 \par
639     {\cf18 char} extensiondat[5] = {\cf22 ".dat"};\par
640     {\cf18 char} *fich_dat = NULL;\par
641     {\cf18 char} *have_extensiondat = strstr(file, {\cf22 ".dat"});\par
642     {\cf20 //Handle file passed with extension or just file name}\par
643     {\cf19 if} (!have_extensiondat) \{\par
644         {\cf20 //Passed file has no extension.We add it for you :-)}\par
645         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
646         fich_dat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(file) + strlen(extensiondat) + 1);\par
647         strcpy(fich_dat, file);\par
648         strcat(fich_dat, extensiondat);\par
649     \} {\cf19 else} \{\par
650         {\cf20 //Passed file has extension. All good to go :)}\par
651         fich_dat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(file) + 1);\par
652         strcpy(fich_dat, file);\par
653     \}\par
654 \par
655     FILE *ExpBD;\par
656     ExpBD = fopen(fich_dat, {\cf22 "rb"});\par
657     {\cf19 if} (ExpBD == NULL) \{\par
658         printf({\cf22 "Erro!\\n"});\par
659         exit(-1);\par
660     \}\par
661     {\cf18 int} nt = 0;\par
662     {\cf18 char} NomeTABELA[50];\par
663     {\cf18 char} LerRegistos[50];\par
664     {\cf18 int} nCampos;\par
665     {\cf18 int} nRegistos;\par
666     {\cf18 int} nCharReg;\par
667     {\cf18 int} contaT;\par
668 \par
669     fread(BD->NOME_BDADOS, 50, 1, ExpBD);\par
670     fread(BD->VERSAO_BDADOS, 50, 1, ExpBD);\par
671     fread(&nt, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
672 \par
673 \par
674     {\cf19 for} ({\cf18 int} ind_t = 0; ind_t < nt; ind_t++) \{\par
675         fread(NomeTABELA, 50, 1, ExpBD);\par
676         TABELA *nomeTb = Criar_Tabela(BD, NomeTABELA);\par
677         fread(&nCampos, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
678         {\cf19 for} ({\cf18 int} i = 0; i < nCampos; i++) \{\par
679             CAMPO C;\par
680             fread(&C, {\cf17 sizeof}(CAMPO), 1, ExpBD);\par
681             Add_Campo_Tabela(nomeTb, C.NOME_CAMPO, C.TIPO);\par
682         \}\par
683         fread(&nRegistos, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
684         contaT = nRegistos * nCampos;\par
685         {\cf18 int} Pos = 0;\par
686 {\cf20 //Init empty}\par
687         {\cf18 char} BUFFER[100] = {\cf22 ""};\par
688         {\cf19 for} ({\cf18 int} int_r = 0; int_r < contaT; int_r++) \{\par
689             Pos++;\par
690             fread(&nCharReg, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
691             fread(LerRegistos, {\cf17 sizeof}({\cf18 char}), nCharReg, ExpBD);\par
692             strcat(BUFFER, LerRegistos);\par
693             strcat(BUFFER, {\cf22 ";"});\par
694             {\cf19 if} (Pos == nCampos) \{\par
695                 Add_Valores_Tabela(nomeTb, BUFFER);\par
696                 Pos = 0;\par
697                 strcpy(BUFFER, {\cf22 ""});\par
698             \}\par
699         \}\par
700     \}\par
701     fclose(ExpBD);\par
702     free(fich_dat);\par
703     {\cf19 return} SUCESSO;\par
704 \}\par
}
}
{\xe \v Memoria_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Memoria_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long int Memoria_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows how much memory the intire DB ocupies in BYTES }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Bytes count \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223                                          \{\par
224     {\cf19 if} (!BD) {\cf19 return} -1;\par
225     {\cf18 long} total_memory = 0;\par
226     total_memory += {\cf17 sizeof}(BDadosCoupe);\par
227     ListaGenerica *tabelas = (ListaGenerica *) BD->LTabelas;\par
228     NOG *node = tabelas->Inicio;\par
229     {\cf20 //Iterate Table list}\par
230     while (node) \{\par
231         TABELA *t = (TABELA *) node->Info;\par
232         total_memory += FIXED_SIZE_ARRAY + {\cf17 sizeof}(NOG) + 2 * POINTERSIZE; {\cf20 // Tablename+Node+2 pointers to list}\par
233         printf({\cf22 "%d"}, {\cf17 sizeof}(NOG *));\par
234         {\cf20 // Iterates Table Fields for each table, since it can differ for every single one}\par
235         NOG *node_LCampos = t->LCampos->Inicio;\par
236         {\cf19 while} (node_LCampos) \{\par
237             total_memory += {\cf17 sizeof}(CAMPO) + {\cf17 sizeof}(NOG) +\par
238                             POINTERSIZE; {\cf20 // Each field is a Node with CAMPO as info and pointer to next node Total: 60+16+8=84Bytes}\par
239             node_LCampos = node_LCampos->Prox;\par
240         \}\par
241         {\cf20 //Iterates Entries, amount can also differ from table to table}\par
242         NOG *node_LRegistos = t->LRegistos->Inicio;\par
243         {\cf19 while} (node_LRegistos) \{\par
244             ListaGenerica *lregistos = node_LRegistos->Info;\par
245             total_memory += {\cf17 sizeof}(NOG);\par
246             NOG *row = lregistos->Inicio;\par
247             {\cf18 int} i = 1;\par
248             {\cf19 while} (row) \{\par
249                 total_memory += {\cf17 sizeof}(NOG) + (strlen(({\cf18 char} *) (row->Info)) + 1);\par
250                 i++;\par
251                 row = row->Prox;\par
252             \}\par
253             node_LRegistos = node_LRegistos->Prox;\par
254         \}\par
255         node = node->Prox;\par
256     \}\par
257 \par
258     printf({\cf22 "Memoria total da BD %ld BYTES \\n"}, total_memory);\par
259     {\cf19 return} total_memory;\par
260 \}\par
}
}
{\xe \v Memoria_Desperdicada_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Memoria_Desperdicada_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long int Memoria_Desperdicada_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows the wasted memory caused by fixed array size inside some structs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Bytes count of wasted memory \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 267                                                       \{\par
268     {\cf19 if} (!BD) {\cf19 return} -1;\par
269     {\cf18 long} wasted_memory = 0;\par
270     {\cf20 //Evaluate the memory used in BD head}\par
271     wasted_memory += (FIXED_SIZE_ARRAY - (strlen(BD->NOME_BDADOS) + 1));\par
272     wasted_memory += (FIXED_SIZE_ARRAY - (strlen(BD->VERSAO_BDADOS) + 1));\par
273     {\cf20 //Evaluate the memory in each ListTabelas - nome_tabela}\par
274     ListaGenerica *head = (ListaGenerica *) BD->LTabelas;\par
275     NOG *node = head->Inicio;\par
276     while (node) \{\par
277         TABELA *t = (TABELA *) node->Info;\par
278         wasted_memory += (FIXED_SIZE_ARRAY - (strlen(t->NOME_TABELA) + 1));  {\cf20 // cada tabela tem o nome a 50}\par
279         NOG *node_LCampos = t->LCampos->Inicio;\par
280         {\cf20 // Iterate the fields}\par
281         {\cf19 while} (node_LCampos) \{\par
282             CAMPO *c = (CAMPO *) node_LCampos->Info;\par
283             wasted_memory += (10 - (strlen(c->TIPO) + 1));\par
284             wasted_memory += (FIXED_SIZE_ARRAY - (strlen(c->NOME_CAMPO) + 1));\par
285             node_LCampos = node_LCampos->Prox;\par
286         \}\par
287         node = node->Prox;\par
288     \}\par
289     printf({\cf22 "Memoria desperdicada na BD %ld BYTES \\n"}, wasted_memory);\par
290     {\cf19 return} wasted_memory;\par
291 \}\par
}
}
{\xe \v Mostrar_BDados\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Mostrar_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows all the tables inside the database }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                                      \{\par
187     {\cf19 if} (!BD){\cf19 return};\par
188     ListaGenerica *head = (ListaGenerica *) BD->LTabelas;\par
189     NOG *node = head->Inicio;\par
190     while (node) \{\par
191         TABELA *t = (TABELA *) node->Info;\par
192         Mostrar_Tabela(t);\par
193         node = node->Prox;\par
194     \}\par
195 \}\par
}
}
{\xe \v Mostrar_Tabela\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Mostrar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_Tabela ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show a table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:Pointer for a table to print \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156                                \{\par
157     {\cf19 if} (!T) {\cf19 return};\par
158     {\cf20 //Print the hear}\par
159     printf({\cf22 "------------Tabela [%s]------------\\n"}, T->NOME_TABELA);\par
160     NOG *n = T->LCampos->Inicio;\par
161     {\cf19 while} (n) \{\par
162         CAMPO *c = (CAMPO *) n->Info;\par
163         printf({\cf22 "[%s] (%s)\\t"}, c->NOME_CAMPO, c->TIPO);\par
164         n = n->Prox;\par
165     \}\par
166     printf({\cf22 "\\n"});\par
167     {\cf20 //Print the body content}\par
168     NOG *registerListNode = T->LRegistos->Inicio;\par
169     {\cf19 while} (registerListNode) \{\par
170         ListaGenerica *ab = registerListNode->Info;\par
171         NOG *pointer = ab->Inicio;\par
172         {\cf19 while} (pointer) \{\par
173             printf({\cf22 "%s\\t\\t"}, ({\cf18 char} *) pointer->Info);\par
174             pointer = pointer->Prox;\par
175         \}\par
176         printf({\cf22 "\\n"});\par
177         registerListNode = registerListNode->Prox;\par
178     \}\par
179     printf({\cf22 "-----[A tabela contem %d registo(s)]-----\\n\\n"}, T->LRegistos->NEL);\par
180 \}\par
}
}
{\xe \v Mostrar_Tabela_NOME\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Mostrar_Tabela_NOME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_Tabela_NOME ({\b BDadosCoupe} *  {\i BD}, char *  {\i tabela})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows to the user the content of the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tabela} \cell }{: Pointer for a table to print \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 140                                                         \{\par
141     {\cf19 if} (!BD){\cf19 return};\par
142     {\cf19 if} (strlen(tabela) < 1) \{\par
143         printf({\cf22 "Nome da tabela invalido.Indique o nome da tabela!\\n"});\par
144         {\cf19 return};\par
145     \}\par
146     TABELA *t = Pesquisar_Tabela(BD, tabela);\par
147     {\cf19 if} (t != NULL) \{\par
148         Mostrar_Tabela(t);\par
149     \}\par
150 \}\par
}
}
{\xe \v Pesquisar_Tabela\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:Pesquisar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TABELA} * Pesquisar_Tabela ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Search a table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{: Name of the table to search \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Table pointer - Case of success found\par
 :NULL - Case of fail \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114                                                              \{\par
115     {\cf19 if} (!BD){\cf19 return} NULL;\par
116     {\cf20 //Guard nome_tabela with at least one caracter}\par
117     {\cf19 if} (strlen(nome_tabela) < 1) \{\par
118         printf({\cf22 "Nome da tabela invalido.Indique o nome da tabela!\\n"});\par
119         {\cf19 return} NULL;\par
120     \}\par
121     {\cf20 //Iterate the list searching the table}\par
122     {\cf19 if} (BD->LTabelas->NEL) \{\par
123         NOG *n = BD->LTabelas->Inicio;\par
124         {\cf19 while} (n) \{\par
125             TABELA *t = (TABELA *) n->Info;\par
126             {\cf20 //Compare the name}\par
127             if (strcmp(nome_tabela, t->NOME_TABELA) == 0){\cf19 return} t;\par
128             n = n->Prox;\par
129         \}\par
130         {\cf19 return} NULL;\par
131     \}\par
132     {\cf19 return} NULL;\par
133 \}\par
}
}
{\xe \v printResultNode\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:printResultNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printResultNode ({\b NOG} *  {\i node})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 811                                 \{\par
812 {\cf20 //Iterate all the nodes and print the info}\par
813     NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
814     {\cf19 while} (p) \{\par
815         printf({\cf22 "%s\\t\\t"}, ({\cf18 char} *) p->Info);\par
816         p = p->Prox;\par
817     \}\par
818     printf({\cf22 "\\n"});\par
819 \}\par
}
}
{\xe \v removeRegister\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:removeRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeRegister ({\b ListaGenerica} *  {\i l}, {\b NOG} *  {\i element})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a REGISTER node from a linked List. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i l} \cell }{:List \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i element} \cell }{: Node element to remove \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 912                                                     \{\par
913     {\cf19 if} (!l)return ;\par
914     {\cf19 if} (!element)return ;\par
915 \par
916     NOG *previous, *actual;\par
917 {\cf20 //    //Find the node to be removed}\par
918     actual = l->Inicio;\par
919     {\cf19 while} (actual) \{\par
920         {\cf19 if} (actual == element) \{\par
921             {\cf19 if} (l->Inicio == actual) \{\par
922                 DestruirLG(actual->Info, destroy_info_string);\par
923                 l->NEL--;\par
924                 l->Inicio = actual->Prox;\par
925             \} {\cf19 else} \{\par
926                 DestruirLG(actual->Info, destroy_info_string);\par
927                 l->NEL--;\par
928                 previous->Prox = actual->Prox;\par
929             \}\par
930         \}\par
931         previous = actual;\par
932         actual = actual->Prox;\par
933     \}\par
934 \par
935 \}\par
}
}
{\xe \v scan\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:scan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * scan (char **  {\i pp}, char  {\i c})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448                               \{\par
449     {\cf18 char} *s = *pp, *p;\par
450     p = strchr(*pp, c);\par
451     {\cf19 if} (p) *p++ = {\cf23 '\\0'};\par
452     *pp = p;\par
453     {\cf19 return} s;\par
454 \}\par
}
}
{\xe \v SELECT\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SELECT ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i nome_campo}, char *  {\i valor_comparacao})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a select in a table with options. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{:Name of the table to perform the select \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure to run the filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{: Name of the field to match \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_comparacao} \cell }{: Value to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Prints the result to the user with affected rows \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 842                                                                                                                     \{\par
843 \par
844 \par
845     clock_t start, end;\par
846     start = clock();\par
847 \par
848     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
849     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
850     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
851     {\cf19 if} (!strlen(nome_campo)){\cf19 return} INSUCESSO;\par
852     {\cf19 if} (!strlen(valor_comparacao)){\cf19 return} INSUCESSO;\par
853 \par
854 \par
855     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
856     {\cf19 if} (table) \{\par
857         {\cf20 //Check if the nome campo exists}\par
858         NOG *field = table->LCampos->Inicio;\par
859         {\cf18 int} i = 0;\par
860         {\cf18 int} field_found = 0;\par
861         {\cf18 int} field_pos;\par
862         {\cf19 while} (field) \{\par
863             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo) == 0) \{\par
864                 field_found = 1;\par
865                 field_pos = i;\par
866                 {\cf19 break};\par
867             \}\par
868             i++;\par
869             field = field->Prox;\par
870         \}\par
871         {\cf19 if} (!field_found) \{\par
872             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
873             {\cf19 return} INSUCESSO;\par
874         \}\par
875 \par
876         {\cf20 //printf("Campo no indice %d\\n\\n", field_pos);}\par
877         showHeaderTable(table->LCampos->Inicio, {\cf22 "SELECT"});\par
878         {\cf18 int} register_count = 0;\par
879         {\cf20 //Pointer to the REGISTOS List}\par
880         NOG *node = table->LRegistos->Inicio;\par
881         {\cf19 while} (node) \{\par
882             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
883             {\cf18 int} pos = 0;\par
884             {\cf19 while} (p) \{\par
885                 {\cf19 if} (field_pos == pos) \{\par
886                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_comparacao)) \{\par
887                         register_count++;\par
888                         printResultNode(node);\par
889                     \}\par
890                 \}\par
891                 pos++;\par
892                 p = p->Prox;\par
893             \}\par
894             node = node->Prox;\par
895         \}\par
896         printf({\cf22 "Foram encontrados %d registos\\n"}, register_count);\par
897 \par
898     \}\par
899 \par
900     end = clock();\par
901     createStatistics(__FUNCTION__, start, end);\par
902     {\cf19 return} SUCESSO;\par
903 \}\par
}
}
{\xe \v showHeaderTable\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:showHeaderTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showHeaderTable ({\b NOG} *  {\i node}, char *  {\i title})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 821                                              \{\par
822     printf({\cf22 "+------------------ %s  QUERY---------------+\\n"}, title);\par
823     NOG *n = node;\par
824     {\cf19 while} (n) \{\par
825         CAMPO *c = (CAMPO *) n->Info;\par
826         printf({\cf22 "[%s] (%s)\\t"}, c->NOME_CAMPO, c->TIPO);\par
827         n = n->Prox;\par
828     \}\par
829     printf({\cf22 "\\n"});\par
830 \}\par
}
}
{\xe \v splitString\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:splitString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b string} * splitString (const char *  {\i inputString})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split a string with a ;. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputString} \cell }{:String yo split \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Returns an array with 2 string elements splited by the ; \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 464                                              \{\par
465     {\cf18 char} *copy_string = malloc({\cf17 sizeof}({\cf18 char}) * strlen(inputString) + 1);\par
466     {\cf18 string} *container = ({\cf18 string} *) malloc({\cf17 sizeof}({\cf18 string}) * 2);\par
467     strcpy(copy_string, inputString);\par
468     {\cf18 char} delimiter[] = {\cf22 "|"};\par
469     {\cf18 int} pos = 0;\par
470     {\cf18 char} *p = copy_string;\par
471     {\cf19 while} (p) \{\par
472         container[pos] = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(p) + 1));\par
473         strcpy(container[pos++], scan(&p, {\cf23 '|'}));\par
474     \}\par
475     free(copy_string);\par
476     {\cf19 return} container;\par
477 \}\par
}
}
{\xe \v UPDATE\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:UPDATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int UPDATE ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i campo_comp}, char *  {\i valor_campo_comp}, char *  {\i nome_campo_update}, char *  {\i valor_campo_update})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a SQL UPDATE to the BD with somo options. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to bD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{: Name of the table to perfomr the query \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure to filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo_comp} \cell }{: Name of the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_campo_comp} \cell }{: Value of the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo_update} \cell }{: Name of field to update \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_campo_update} \cell }{: Value to update \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1049                                                               \{\par
1050 \par
1051     clock_t start, end;\par
1052     start = clock();\par
1053 \par
1054     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
1055     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
1056     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
1057     {\cf19 if} (!strlen(campo_comp)){\cf19 return} INSUCESSO;\par
1058     {\cf19 if} (!strlen(valor_campo_comp)){\cf19 return} INSUCESSO;\par
1059 \par
1060     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
1061     {\cf19 if} (table) \{\par
1062         {\cf20 //Check if the nome campo exists}\par
1063         NOG *field = table->LCampos->Inicio;\par
1064         {\cf18 int} i = 0;\par
1065         {\cf18 int} field_found = 0;\par
1066         {\cf18 int} field_pos = 0;\par
1067         {\cf19 while} (field) \{\par
1068             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, campo_comp) == 0) \{\par
1069                 field_found = 1;\par
1070                 field_pos = i;\par
1071                 {\cf19 break};\par
1072             \}\par
1073             i++;\par
1074             field = field->Prox;\par
1075         \}\par
1076         {\cf20 //Check if the nome_campo_update exists}\par
1077         i = 0;\par
1078         field_found = 0;\par
1079         {\cf18 int} field_update_pos = 0;\par
1080         field = table->LCampos->Inicio;\par
1081         {\cf19 while} (field) \{\par
1082             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo_update) == 0) \{\par
1083                 field_found = 1;\par
1084                 field_update_pos = i;\par
1085                 {\cf19 break};\par
1086             \}\par
1087             i++;\par
1088             field = field->Prox;\par
1089         \}\par
1090 \par
1091         {\cf19 if} (!field_found) \{\par
1092             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
1093             {\cf19 return} INSUCESSO;\par
1094         \}\par
1095         printf({\cf22 "Campo aprocurar no indice %d\\n\\n"}, field_pos);\par
1096         printf({\cf22 "Campo a atualizar no indice %d\\n\\n"}, field_update_pos);\par
1097 \par
1098         showHeaderTable(table->LCampos->Inicio, {\cf22 "UPDATE"});\par
1099         {\cf18 int} register_count = 0;\par
1100         {\cf20 //Pointer to the REGISTOS List}\par
1101         NOG *node = table->LRegistos->Inicio;\par
1102         {\cf19 while} (node) \{\par
1103             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
1104             {\cf18 int} pos = 0;\par
1105             {\cf19 while} (p) \{\par
1106                 {\cf19 if} (field_pos == pos) \{\par
1107                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_campo_comp)) \{\par
1108                         updateREGISTER(node, field_update_pos, valor_campo_update);\par
1109                         register_count++;\par
1110                         printResultNode(node);\par
1111                     \}\par
1112                 \}\par
1113                 pos++;\par
1114                 p = p->Prox;\par
1115             \}\par
1116             node = node->Prox;\par
1117         \}\par
1118         printf({\cf22 "+------------------------------+\\n"});\par
1119         printf({\cf22 "Foram encontrado(s) %d registo(s)\\n"}, register_count);\par
1120 \par
1121     \} {\cf19 else} \{\par
1122         printf({\cf22 "Tabela nao encontrada!!!\\n"});\par
1123     \}\par
1124     end = clock();\par
1125     createStatistics(__FUNCTION__, start, end);\par
1126     {\cf19 return} SUCESSO;\par
1127 \}\par
}
}
{\xe \v updateREGISTER\:BDadosCoupe.c}
{\xe \v BDadosCoupe.c\:updateREGISTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateREGISTER ({\b NOG} *  {\i r}, int  {\i field_pos}, char *  {\i newValue})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update a REGISTER node with a new value based on the field_position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i r} \cell }{: Register node to uptade \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i field_pos} \cell }{: Field position to update \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newValue} \cell }{: Value to update \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1019                                                            \{\par
1020     {\cf19 if} (!r){\cf19 return};\par
1021     {\cf19 if} (!newValue){\cf19 return};\par
1022     {\cf18 int} pos = 0;\par
1023 \par
1024     NOG *p = ((REGISTO *) (r->Info))->Inicio;\par
1025     {\cf19 while} (p) \{\par
1026         {\cf19 if} (field_pos == pos) \{\par
1027             free(p->Info);\par
1028             p->Info = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(newValue) + 1);\par
1029             strcpy(p->Info, newValue);\par
1030             {\cf19 return};\par
1031         \}\par
1032         pos++;\par
1033         p = p->Prox;\par
1034     \}\par
1035 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.h}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "ListaGenerica.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BDadosCoupe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TABELA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CAMPO}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REGISTO}\~ {\b ListaGenerica}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BDadosCoupe} * {\b Criar_BDados} (char *nome_bd, char *versao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Criar_BDados: A) Criar a Base de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TABELA} * {\b Criar_Tabela} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B) Creates a table inside DB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Campo_Tabela} ({\b TABELA} *T, char *nome_campo, char *tipo_campo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a field to the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Valores_Tabela} ({\b TABELA} *T, char *dados)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new value to the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add_Valores_Tabela_BDados} ({\b BDadosCoupe} *BD, char *nome_tabela, char *dados)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TABELA} * {\b Pesquisar_Tabela} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Search a table }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_Tabela_NOME} ({\b BDadosCoupe} *BD, char *tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows to the user the content of the table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_Tabela} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show a table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mostrar_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows all the tables inside the database }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Destruir_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Remove all content and dealoc the database }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long int {\b Memoria_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows how much memory the intire DB ocupies in BYTES }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long int {\b Memoria_Desperdicada_BDados} ({\b BDadosCoupe} *BD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows the wasted memory caused by fixed array size inside some structs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_Tabela_BDados_Excel} ({\b BDadosCoupe} *BD, char *tabela, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the table to CSV file }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_BDados_Excel} ({\b BDadosCoupe} *BD, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the intire DB to CSV File }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Importar_BDados_Excel} ({\b BDadosCoupe} *BD, char *ficheir_csv)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the user to import a CSV file to restore de BD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Exportar_BDados_Ficheiro_Binario} ({\b BDadosCoupe} *BD, char *fich_dat)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export the database for a binary file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Importar_BDados_Ficheiro_Binario} ({\b BDadosCoupe} *BD, char *fich_dat)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Import a binary file to restore the BD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE_TABLE_DATA} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data inside the table.Does not remove table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE_TABLE_FIELDS} ({\b TABELA} *T)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data field\par
 Warning. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DROP_TABLE} ({\b BDadosCoupe} *BD, char *nome_tabela)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the content of the table and drop it. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SELECT} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *nome_campo, char *valor_comparacao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a select in a table with options. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DELETE} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *nome_campo, char *valor_comparacao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b UPDATE} ({\b BDadosCoupe} *BD, char *_tabela, int(*f_condicao)(char *, char *), char *campo_comp, char *valor_campo_comp, char *nome_campo_update, char *valor_campo_update)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a SQL UPDATE to the BD with somo options. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v REGISTO\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:REGISTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REGISTO\~ {\b ListaGenerica}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Add_Campo_Tabela\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Add_Campo_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Campo_Tabela ({\b TABELA} *  {\i T}, char *  {\i nome_campo}, char *  {\i tipo_campo})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a field to the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{TABELA* : Table Pointer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{char* : Field name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tipo_campo} \cell }{char* : Field type (INT, STRING, CHAR, FLOAT) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int : Returns SUCESSO/INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                                                     \{\par
50     {\cf19 if} (!T) {\cf19 return} INSUCESSO;\par
51     CAMPO *campo = (CAMPO *) malloc({\cf17 sizeof}(CAMPO));\par
52     strcpy(campo->NOME_CAMPO, nome_campo);\par
53     strcpy(campo->TIPO, tipo_campo);\par
54     {\cf19 return} AddLG(T->LCampos, campo);\par
55 \}\par
}
}
{\xe \v Add_Valores_Tabela\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Add_Valores_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Valores_Tabela ({\b TABELA} *  {\i T}, char *  {\i dados})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new value to the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{- Pointer table \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dados} \cell }{- String of data splitted with; ex 1;car;volvo \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Returns SUCESSO/INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                \{\par
64     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
65     {\cf19 if} (dados) \{\par
66         {\cf18 char} *tmp = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(dados) + 1));\par
67         strcpy(tmp, dados);\par
68         {\cf18 char} *data = strtok(tmp, {\cf22 ";"});\par
69         REGISTO *row = CriarLG();\par
70         {\cf19 while} (data != NULL) \{\par
71             {\cf18 char} *registo = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(data) + 1));\par
72             strcpy(registo, data);\par
73             data = strtok(NULL, {\cf22 ";"});\par
74             AddLG(row, registo);\par
75         \}\par
76         AddLG(T->LRegistos, row);\par
77         tmp = NULL;\par
78         free(tmp);\par
79         {\cf19 return} SUCESSO;\par
80     \}\par
81     {\cf19 return} INSUCESSO;\par
82 \}\par
}
}
{\xe \v Add_Valores_Tabela_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Add_Valores_Tabela_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Add_Valores_Tabela_BDados ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela}, char *  {\i dados})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{:Name of table \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dados} \cell }{:Data to be inserted in the table.\par
Note: Data must be a string with with values separated by character ; \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: SUCESSO - Case of success\par
 :INSUCESSO - Case of fail \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                                                                \{\par
94     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
95     {\cf19 if} (!nome_tabela){\cf19 return} INSUCESSO;\par
96     {\cf19 if} (!dados){\cf19 return} INSUCESSO;\par
97     {\cf18 char} *tbl_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(nome_tabela) + 1);\par
98     strcpy(tbl_name, nome_tabela);\par
99     TABELA *T = Pesquisar_Tabela(BD, strupr(tbl_name));\par
100     free(tbl_name);\par
101     {\cf19 if} (T) \{\par
102         {\cf19 return} Add_Valores_Tabela(T, dados);\par
103     \}\par
104     {\cf19 return} INSUCESSO;\par
105 \}\par
}
}
{\xe \v Criar_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Criar_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BDadosCoupe} * Criar_BDados (char *  {\i nome_bd}, char *  {\i versao})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Criar_BDados: A) Criar a Base de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_bd} \cell }{char* : DB name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i versao} \cell }{char* : DB version \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BDadosCoupe* : Pointer to created database \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                        \{\par
18     BDadosCoupe *BD = (BDadosCoupe *) malloc({\cf17 sizeof}(BDadosCoupe));\par
19     strcpy(BD->NOME_BDADOS, nome_bd);\par
20     strcpy(BD->VERSAO_BDADOS, versao);\par
21     BD->LTabelas = CriarLG();\par
22     {\cf19 return} BD;\par
23 \}\par
}
}
{\xe \v Criar_Tabela\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Criar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TABELA} * Criar_Tabela ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B) Creates a table inside DB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{BDadosCoupe* : Pointer to database \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{char* : table name \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
TABELA* : Returns a pointer to the created table. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: AS,HS,PC \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                                          \{\par
33     TABELA *table = (TABELA *) malloc({\cf17 sizeof}(TABELA));\par
34     {\cf20 //The table name is converted to UPPERCASE for normalize user input}\par
35     strcpy(table->NOME_TABELA, strupr(nome_tabela));\par
36     table->LCampos = CriarLG();\par
37     table->LRegistos = CriarLG();\par
38     AddLG(BD->LTabelas, table);\par
39     {\cf19 return} table;\par
40 \}\par
}
}
{\xe \v DELETE\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:DELETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i nome_campo}, char *  {\i valor_comparacao})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{:Table to perfom the delete \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure for filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{: Name to the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_comparacao} \cell }{:Value to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 947                                                                                                                     \{\par
948     {\cf20 //createStatistics metrics}\par
949     clock_t start, end;\par
950     start = clock();\par
951 \par
952     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
953     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
954     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
955     {\cf19 if} (!strlen(nome_campo)){\cf19 return} INSUCESSO;\par
956     {\cf19 if} (!strlen(valor_comparacao)){\cf19 return} INSUCESSO;\par
957 \par
958     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
959     {\cf19 if} (table) \{\par
960         {\cf20 //Check if the nome campo exists}\par
961         NOG *field = table->LCampos->Inicio;\par
962         {\cf18 int} i = 0;\par
963         {\cf18 int} field_found = 0;\par
964         {\cf18 int} field_pos;\par
965         {\cf19 while} (field) \{\par
966             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo) == 0) \{\par
967                 field_found = 1;\par
968                 field_pos = i;\par
969                 {\cf19 break};\par
970             \}\par
971             i++;\par
972             field = field->Prox;\par
973         \}\par
974         {\cf19 if} (!field_found) \{\par
975             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
976             {\cf19 return} INSUCESSO;\par
977         \}\par
978 \par
979         showHeaderTable(table->LCampos->Inicio, {\cf22 "DROP"});\par
980         {\cf18 int} register_count = 0;\par
981         {\cf20 //Pointer to the REGISTOS List}\par
982         NOG *node = table->LRegistos->Inicio;\par
983         {\cf18 int} found = 0;\par
984         {\cf19 while} (node) \{\par
985             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
986             {\cf18 int} pos = 0;\par
987             {\cf19 while} (p) \{\par
988                 {\cf19 if} (field_pos == pos) \{\par
989                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_comparacao)) \{\par
990                         printResultNode(node);\par
991                         found = 1;\par
992                         register_count++;\par
993                     \}\par
994                 \}\par
995                 pos++;\par
996                 p = p->Prox;\par
997             \}\par
998             {\cf19 if} (found) \{\par
999                 removeRegister(table->LRegistos, node);\par
1000                 found = 0;\par
1001             \}\par
1002             node = node->Prox;\par
1003         \}\par
1004         printf({\cf22 "+------------------------------------------+\\n"});\par
1005         printf({\cf22 "Foram encontrado(s) %d registos\\n\\n\\n"}, register_count);\par
1006 \par
1007     \}\par
1008     end = clock();\par
1009     createStatistics(__FUNCTION__, start, end);\par
1010     {\cf19 return} SUCESSO;\par
1011 \}\par
}
}
{\xe \v DELETE_TABLE_DATA\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:DELETE_TABLE_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE_TABLE_DATA ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data inside the table.Does not remove table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:table to empty \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 723                                  \{\par
724     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
725     NOG *registerListNode = T->LRegistos->Inicio;\par
726     {\cf20 //Destroy the List inside each node->info}\par
727     {\cf19 while} (registerListNode) \{\par
728         DestruirLG(registerListNode->Info, destroy_info_string);\par
729         registerListNode = registerListNode->Prox;\par
730     \}\par
731     {\cf20 //Destroy the List.The data (info) is already removed above}\par
732     {\cf20 //DestruirLG(T->LRegistos, destroy_info);}\par
733     DestruirLG(T->LRegistos, NULL);\par
734 \par
735     {\cf20 //Create a new List and add it empty}\par
736     T->LRegistos = CriarLG();\par
737     {\cf19 return} SUCESSO;\par
738 \}\par
}
}
{\xe \v DELETE_TABLE_FIELDS\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:DELETE_TABLE_FIELDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DELETE_TABLE_FIELDS ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete the data field\par
 Warning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:table to empty \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 745                                    \{\par
746     {\cf19 if} (!T){\cf19 return} INSUCESSO;\par
747     {\cf19 if} (T->LCampos->NEL > 0) \{\par
748         NOG *node = T->LCampos->Inicio;\par
749         {\cf19 while} (node) \{\par
750             NOG *aux = node;\par
751             free(aux->Info);\par
752             node = aux->Prox;\par
753             free(aux);\par
754             T->LCampos->NEL--;\par
755         \}\par
756         {\cf19 return} SUCESSO;\par
757     \}\par
758     {\cf19 return} INSUCESSO;\par
759 \}\par
}
}
{\xe \v Destruir_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Destruir_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Destruir_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Remove all content and dealoc the database }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                       \{\par
202     {\cf19 if} (!BD){\cf19 return};\par
203     {\cf19 if} (BD->LTabelas->NEL > 0) \{\par
204         {\cf19 while} (BD->LTabelas->NEL) \{\par
205             TABELA *inicio = BD->LTabelas->Inicio->Info;\par
206             DROP_TABLE(BD, inicio->NOME_TABELA);\par
207         \}\par
208     \}\par
209     free(BD->LTabelas);\par
210     BD->LTabelas = NULL;\par
211     printf({\cf22 "%s\\n"}, BD->NOME_BDADOS);\par
212     printf({\cf22 "Destruindo BD"});\par
213     free(BD);\par
214 \par
215 \par
216 \}\par
}
}
{\xe \v DROP_TABLE\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:DROP_TABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int DROP_TABLE ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the content of the table and drop it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{:Name of the table to drop \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for empty result \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 767                                                    \{\par
768     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
769     {\cf19 if} (strlen(nome_tabela) < 1){\cf19 return} INSUCESSO;\par
770     TABELA *t = Pesquisar_Tabela(BD, nome_tabela);\par
771     {\cf19 if} (t) \{\par
772         {\cf20 //printf("Droping table %s\\n", t->NOME_TABELA);}\par
773         NOG *P = BD->LTabelas->Inicio;\par
774         NOG *Ant = NULL;\par
775         {\cf18 int} STOP = 0;\par
776         {\cf19 while} (P && !STOP) \{\par
777             {\cf19 if} (P->Info == t) {\cf20 // if (func(P->Info, cc) == 1)}\par
778             \{\par
779                 {\cf20 // Vou ter de remover o P}\par
780                 STOP = 1;\par
781             \} {\cf19 else} \{\par
782                 Ant = P;\par
783                 P = P->Prox;\par
784             \}\par
785         \}\par
786         {\cf20 // Agora ou encontrei ou n?o}\par
787         {\cf19 if} (STOP == 1) \{\par
788             {\cf20 // Remover o que est? no P}\par
789             {\cf19 if} (Ant)\par
790                 Ant->Prox = P->Prox;\par
791             {\cf19 else} {\cf20 // Caso do inicio}\par
792                 BD->LTabelas->Inicio = P->Prox;\par
793 \par
794             DELETE_TABLE_DATA(t);\par
795             DELETE_TABLE_FIELDS(t);\par
796             free(P->Info);\par
797             free(P);\par
798             BD->LTabelas->NEL--;\par
799             {\cf19 return} SUCESSO;\par
800 \par
801         \}\par
802         {\cf19 return} INSUCESSO;\par
803 \par
804 \par
805         {\cf19 return} SUCESSO;\par
806     \}\par
807     {\cf19 return} INSUCESSO;\par
808 \}\par
}
}
{\xe \v Exportar_BDados_Excel\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Exportar_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the intire DB to CSV File }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: file to export.Extension is added automaticly in case of missing \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 368                                                               \{\par
369     {\cf19 if} (!BD) {\cf19 return} -1;\par
370     {\cf19 if} (!ficheir_csv) {\cf19 return} -1;\par
371 \par
372     FILE *ExpBD;\par
373     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
374     {\cf18 char} *file_name = NULL;\par
375     scanf({\cf22 "%s"}, ficheir_csv);\par
376     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
377     {\cf20 //Handle file passed with extension or just file name}\par
378     {\cf19 if} (!have_extension) \{\par
379         {\cf20 //Passed file has no extension.We add it for you :-)}\par
380         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
381         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
382         strcpy(file_name, ficheir_csv);\par
383         strcat(file_name, extension);\par
384     \} {\cf19 else} \{\par
385         {\cf20 //Passed file has extension. All good to go :)}\par
386         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
387         strcpy(file_name, ficheir_csv);\par
388     \}\par
389 \par
390     ExpBD = fopen(file_name, {\cf22 "w"});\par
391     {\cf19 if} (ExpBD) \{\par
392         NOG *n = BD->LTabelas->Inicio;\par
393         fprintf(ExpBD, {\cf22 "%s\\n"}, BD->NOME_BDADOS);\par
394         fprintf(ExpBD, {\cf22 "%s\\n"}, BD->VERSAO_BDADOS);\par
395         fprintf(ExpBD, {\cf22 "%d\\n"}, BD->LTabelas->NEL);\par
396         {\cf19 while} (n) \{\par
397             TABELA *t = (TABELA *) n->Info;\par
398             NOG *Aux = t->LCampos->Inicio;\par
399             fprintf(ExpBD, {\cf22 "%s\\n"}, t->NOME_TABELA);\par
400             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LCampos->NEL);\par
401             {\cf19 while} (Aux) \{\par
402                 CAMPO *C = (CAMPO *) Aux->Info;\par
403                 fprintf(ExpBD, {\cf22 "%s|%s;"}, C->NOME_CAMPO, C->TIPO);\par
404                 Aux = Aux->Prox;\par
405             \}\par
406             fprintf(ExpBD, {\cf22 "\\n"});\par
407             Aux = t->LRegistos->Inicio;\par
408             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LRegistos->NEL);\par
409             {\cf19 while} (Aux) \{\par
410                 ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
411                 NOG *P = R->Inicio;\par
412                 while (P) \{\par
413                     fprintf(ExpBD, {\cf22 "%s;"}, (REGISTO *) P->Info);\par
414                     P = P->Prox;\par
415                 \}\par
416                 fprintf(ExpBD, {\cf22 "\\n"});\par
417                 Aux = Aux->Prox;\par
418             \}\par
419             n = n->Prox;\par
420             fprintf(ExpBD, {\cf22 "\\n"});\par
421         \}\par
422         fclose(ExpBD);\par
423         free(file_name);\par
424         {\cf19 return} SUCESSO;\par
425     \}\par
426     free(file_name);\par
427     {\cf19 return} INSUCESSO;\par
428 \}\par
}
}
{\xe \v Exportar_BDados_Ficheiro_Binario\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Exportar_BDados_Ficheiro_Binario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_BDados_Ficheiro_Binario ({\b BDadosCoupe} *  {\i BD}, char *  {\i fich_dat})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export the database for a binary file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{- Datgabase name to use \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fich_dat} \cell }{File name to write binary \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the export \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 569                                                                       \{\par
570     {\cf19 if} (!BD) {\cf19 return} -1;\par
571     {\cf19 if} (!fich_dat) {\cf19 return} -1;\par
572 \par
573     {\cf18 char} extensiondat[5] = {\cf22 ".dat"};\par
574     {\cf18 char} *file_namedat = NULL;\par
575     {\cf18 char} *have_extensiondat = strstr(fich_dat, {\cf22 ".dat"});\par
576     {\cf20 //Handle file passed with extension or just file name}\par
577     {\cf19 if} (!have_extensiondat) \{\par
578         {\cf20 //Passed file has no extension.We add it for you :-)}\par
579         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
580         file_namedat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(fich_dat) + strlen(extensiondat) + 1);\par
581         strcpy(file_namedat, fich_dat);\par
582         strcat(file_namedat, extensiondat);\par
583     \} {\cf19 else} \{\par
584         {\cf20 //Passed file has extension. All good to go :)}\par
585         file_namedat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(fich_dat) + 1);\par
586         strcpy(file_namedat, fich_dat);\par
587     \}\par
588 \par
589     FILE *ExpBD;\par
590     ExpBD = fopen(file_namedat, {\cf22 "wb"});\par
591 \par
592     NOG *n = BD->LTabelas->Inicio;\par
593     fwrite(BD->NOME_BDADOS, 50, 1, ExpBD);\par
594     fwrite(BD->VERSAO_BDADOS, 50, 1, ExpBD);\par
595     fwrite(&BD->LTabelas->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
596     {\cf19 while} (n) \{\par
597         TABELA *t = (TABELA *) n->Info;\par
598         NOG *Aux = t->LCampos->Inicio;\par
599         fwrite(t->NOME_TABELA, 50, 1, ExpBD);\par
600         fwrite(&t->LCampos->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
601         {\cf19 while} (Aux) \{\par
602             CAMPO *C = (CAMPO *) Aux->Info;\par
603             fwrite(C, {\cf17 sizeof}(CAMPO), 1, ExpBD);\par
604             Aux = Aux->Prox;\par
605         \}\par
606 \par
607         Aux = t->LRegistos->Inicio;\par
608         fwrite(&t->LRegistos->NEL, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
609         {\cf19 while} (Aux) \{\par
610 \par
611             ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
612             NOG *x = R->Inicio;\par
613             while (x) \{\par
614                 {\cf18 int} M = strlen(x->Info) + 1;\par
615                 fwrite(&M, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
616                 fwrite(x->Info, {\cf17 sizeof}({\cf18 char}), M, ExpBD);\par
617                 x = x->Prox;\par
618             \}\par
619             Aux = Aux->Prox;\par
620         \}\par
621         n = n->Prox;\par
622     \}\par
623     fclose(ExpBD);\par
624     free(file_namedat);\par
625     {\cf19 return} SUCESSO;\par
626 \}\par
}
}
{\xe \v Exportar_Tabela_BDados_Excel\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Exportar_Tabela_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Exportar_Tabela_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i tabela}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Export the table to CSV file }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tabela} \cell }{:Pointer to a table to export \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: file to export.Extension is added automaticly in case of missing \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 301                                                                                    \{\par
302     {\cf19 if} (!BD) {\cf19 return} -1;\par
303     {\cf19 if} (!tabela) {\cf19 return} -1;\par
304     {\cf19 if} (!ficheir_csv) {\cf19 return} -1;\par
305 \par
306     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
307     {\cf18 char} *file_name = NULL;\par
308 \par
309     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
310     {\cf20 //Handle file passed with extension or just file name}\par
311     {\cf19 if} (!have_extension) \{\par
312         {\cf20 //Passed file has no extension.We add it for you :-)}\par
313         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
314         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
315         strcpy(file_name, ficheir_csv);\par
316         strcat(file_name, extension);\par
317     \} {\cf19 else} \{\par
318         {\cf20 //Passed file has extension. All good to go :)}\par
319         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
320         strcpy(file_name, ficheir_csv);\par
321     \}\par
322     FILE *ExpBD;\par
323     ExpBD = fopen(file_name, {\cf22 "w"});\par
324     {\cf19 if} (ExpBD) \{\par
325         TABELA *t = Pesquisar_Tabela(BD, tabela);\par
326         {\cf19 if} (t) \{\par
327             NOG *Aux = t->LCampos->Inicio;\par
328             fprintf(ExpBD, {\cf22 "%s\\n"}, t->NOME_TABELA);\par
329             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LCampos->NEL);\par
330             {\cf19 while} (Aux) \{\par
331                 CAMPO *C = (CAMPO *) Aux->Info;\par
332                 fprintf(ExpBD, {\cf22 "%s|%s;"}, C->NOME_CAMPO, C->TIPO);\par
333                 Aux = Aux->Prox;\par
334             \}\par
335             fprintf(ExpBD, {\cf22 "\\n"});\par
336             Aux = t->LRegistos->Inicio;\par
337             fprintf(ExpBD, {\cf22 "%d\\n"}, t->LRegistos->NEL);\par
338             {\cf19 while} (Aux) \{\par
339                 ListaGenerica *R = (ListaGenerica *) Aux->Info;\par
340                 NOG *P = R->Inicio;\par
341                 while (P) \{\par
342                     fprintf(ExpBD, {\cf22 "%s;"}, (REGISTO *) P->Info);\par
343                     P = P->Prox;\par
344                 \}\par
345                 fprintf(ExpBD, {\cf22 "\\n"});\par
346                 Aux = Aux->Prox;\par
347             \}\par
348             fclose(ExpBD);\par
349             free(file_name);\par
350             {\cf19 return} SUCESSO;\par
351         \}\par
352         printf({\cf22 "Esta tabela nao existe !!!\\n"});\par
353         fclose(ExpBD);\par
354         free(file_name);\par
355         {\cf19 return} INSUCESSO;\par
356     \}\par
357     printf({\cf22 "Nao foi possivel escrever esse ficheiro\\n"});\par
358     free(file_name);\par
359     {\cf19 return} INSUCESSO;\par
360 \}\par
}
}
{\xe \v Importar_BDados_Excel\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Importar_BDados_Excel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Importar_BDados_Excel ({\b BDadosCoupe} *  {\i BD}, char *  {\i ficheir_csv})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the user to import a CSV file to restore de BD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ficheir_csv} \cell }{: File CSV with the exported data \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 485                                                               \{\par
486     {\cf19 if} (!BD) {\cf19 return} INSUCESSO;\par
487     {\cf19 if} (!ficheir_csv) {\cf19 return} INSUCESSO;\par
488 \par
489     FILE *ExpBD;\par
490 \par
491     {\cf18 char} extension[5] = {\cf22 ".csv"};\par
492     {\cf18 char} *file_name = NULL;\par
493     {\cf18 char} *have_extension = strstr(ficheir_csv, {\cf22 ".csv"});\par
494     {\cf20 //Handle file passed with extension or just file name}\par
495     {\cf19 if} (!have_extension) \{\par
496         {\cf20 //Passed file has no extension.We add it for you :-)}\par
497         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
498         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + strlen(extension) + 1);\par
499         strcpy(file_name, ficheir_csv);\par
500         strcat(file_name, extension);\par
501     \} {\cf19 else} \{\par
502         {\cf20 //Passed file has extension. All good to go :)}\par
503         file_name = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(ficheir_csv) + 1);\par
504         strcpy(file_name, ficheir_csv);\par
505     \}\par
506 \par
507     ExpBD = fopen(file_name, {\cf22 "r"});\par
508     {\cf19 if} (ExpBD == NULL) \{\par
509         printf({\cf22 "Erro!\\n"});\par
510         {\cf19 return} INSUCESSO;\par
511     \}\par
512     {\cf18 int} nt = 0;\par
513 \par
514     fscanf(ExpBD, {\cf22 "%s"}, BD->NOME_BDADOS);\par
515     {\cf20 //Read the database version}\par
516     fscanf(ExpBD, {\cf22 "%s"}, BD->VERSAO_BDADOS);\par
517     {\cf20 //Read the number of tables stored}\par
518     fscanf(ExpBD, {\cf22 "%d"}, &nt);\par
519 \par
520     {\cf18 char} NomeTABELA[50];\par
521     {\cf18 char} LerCampos[50];\par
522     {\cf18 char} LerRegistos[50];\par
523     {\cf18 int} nCampos;\par
524     {\cf18 int} nRegistos;\par
525 \par
526 \par
527     {\cf19 for} ({\cf18 int} i = 0; i < nt; i++) \{\par
528         fscanf(ExpBD, {\cf22 "%s"}, NomeTABELA);\par
529         TABELA *nomeTb = Criar_Tabela(BD, NomeTABELA);\par
530         fscanf(ExpBD, {\cf22 "%d"}, &nCampos);\par
531         fscanf(ExpBD, {\cf22 "%s"}, LerCampos);\par
532 \par
533         {\cf18 char} *tmp = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * (strlen(LerCampos) + 1));\par
534         strcpy(tmp, LerCampos);\par
535 \par
536         {\cf18 char} *data = strtok(tmp, {\cf22 ";"});\par
537         {\cf19 while} (data != NULL) \{\par
538             {\cf18 char} *registo = ({\cf18 char} *) malloc((strlen(data) + 1));\par
539             strcpy(registo, data);\par
540             data = strtok(NULL, {\cf22 ";"});\par
541             {\cf18 string} *parts = splitString(registo);\par
542             Add_Campo_Tabela(nomeTb, parts[0], parts[1]);\par
543             free(parts);\par
544             free(registo);\par
545         \}\par
546         free(tmp);\par
547         tmp = NULL;\par
548 \par
549         {\cf20 //Read the table data}\par
550         fscanf(ExpBD, {\cf22 "%d"}, &nRegistos);\par
551         {\cf19 for} ({\cf18 int} b = 0; b < nRegistos; b++) \{\par
552             fscanf(ExpBD, {\cf22 "%s"}, LerRegistos);\par
553             Add_Valores_Tabela(nomeTb, LerRegistos);\par
554         \}\par
555     \}\par
556 \par
557     fclose(ExpBD);\par
558     free(file_name);\par
559     {\cf19 return} SUCESSO;\par
560 \}\par
}
}
{\xe \v Importar_BDados_Ficheiro_Binario\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Importar_BDados_Ficheiro_Binario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Importar_BDados_Ficheiro_Binario ({\b BDadosCoupe} *  {\i BD}, char *  {\i file})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Import a binary file to restore the BD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{:File to be loades \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
SUCESSO or INSUCESSO for the state of the import \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 634                                                                   \{\par
635 \par
636     {\cf19 if} (!BD) {\cf19 return} INSUCESSO;\par
637     {\cf19 if} (!file) {\cf19 return} INSUCESSO;\par
638 \par
639     {\cf18 char} extensiondat[5] = {\cf22 ".dat"};\par
640     {\cf18 char} *fich_dat = NULL;\par
641     {\cf18 char} *have_extensiondat = strstr(file, {\cf22 ".dat"});\par
642     {\cf20 //Handle file passed with extension or just file name}\par
643     {\cf19 if} (!have_extensiondat) \{\par
644         {\cf20 //Passed file has no extension.We add it for you :-)}\par
645         printf({\cf22 "Nao tem  extensao, adicionando por si\\n"});\par
646         fich_dat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(file) + strlen(extensiondat) + 1);\par
647         strcpy(fich_dat, file);\par
648         strcat(fich_dat, extensiondat);\par
649     \} {\cf19 else} \{\par
650         {\cf20 //Passed file has extension. All good to go :)}\par
651         fich_dat = ({\cf18 char} *) malloc({\cf17 sizeof}({\cf18 char}) * strlen(file) + 1);\par
652         strcpy(fich_dat, file);\par
653     \}\par
654 \par
655     FILE *ExpBD;\par
656     ExpBD = fopen(fich_dat, {\cf22 "rb"});\par
657     {\cf19 if} (ExpBD == NULL) \{\par
658         printf({\cf22 "Erro!\\n"});\par
659         exit(-1);\par
660     \}\par
661     {\cf18 int} nt = 0;\par
662     {\cf18 char} NomeTABELA[50];\par
663     {\cf18 char} LerRegistos[50];\par
664     {\cf18 int} nCampos;\par
665     {\cf18 int} nRegistos;\par
666     {\cf18 int} nCharReg;\par
667     {\cf18 int} contaT;\par
668 \par
669     fread(BD->NOME_BDADOS, 50, 1, ExpBD);\par
670     fread(BD->VERSAO_BDADOS, 50, 1, ExpBD);\par
671     fread(&nt, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
672 \par
673 \par
674     {\cf19 for} ({\cf18 int} ind_t = 0; ind_t < nt; ind_t++) \{\par
675         fread(NomeTABELA, 50, 1, ExpBD);\par
676         TABELA *nomeTb = Criar_Tabela(BD, NomeTABELA);\par
677         fread(&nCampos, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
678         {\cf19 for} ({\cf18 int} i = 0; i < nCampos; i++) \{\par
679             CAMPO C;\par
680             fread(&C, {\cf17 sizeof}(CAMPO), 1, ExpBD);\par
681             Add_Campo_Tabela(nomeTb, C.NOME_CAMPO, C.TIPO);\par
682         \}\par
683         fread(&nRegistos, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
684         contaT = nRegistos * nCampos;\par
685         {\cf18 int} Pos = 0;\par
686 {\cf20 //Init empty}\par
687         {\cf18 char} BUFFER[100] = {\cf22 ""};\par
688         {\cf19 for} ({\cf18 int} int_r = 0; int_r < contaT; int_r++) \{\par
689             Pos++;\par
690             fread(&nCharReg, {\cf17 sizeof}({\cf18 int}), 1, ExpBD);\par
691             fread(LerRegistos, {\cf17 sizeof}({\cf18 char}), nCharReg, ExpBD);\par
692             strcat(BUFFER, LerRegistos);\par
693             strcat(BUFFER, {\cf22 ";"});\par
694             {\cf19 if} (Pos == nCampos) \{\par
695                 Add_Valores_Tabela(nomeTb, BUFFER);\par
696                 Pos = 0;\par
697                 strcpy(BUFFER, {\cf22 ""});\par
698             \}\par
699         \}\par
700     \}\par
701     fclose(ExpBD);\par
702     free(fich_dat);\par
703     {\cf19 return} SUCESSO;\par
704 \}\par
}
}
{\xe \v Memoria_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Memoria_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long int Memoria_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows how much memory the intire DB ocupies in BYTES }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Bytes count \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223                                          \{\par
224     {\cf19 if} (!BD) {\cf19 return} -1;\par
225     {\cf18 long} total_memory = 0;\par
226     total_memory += {\cf17 sizeof}(BDadosCoupe);\par
227     ListaGenerica *tabelas = (ListaGenerica *) BD->LTabelas;\par
228     NOG *node = tabelas->Inicio;\par
229     {\cf20 //Iterate Table list}\par
230     while (node) \{\par
231         TABELA *t = (TABELA *) node->Info;\par
232         total_memory += FIXED_SIZE_ARRAY + {\cf17 sizeof}(NOG) + 2 * POINTERSIZE; {\cf20 // Tablename+Node+2 pointers to list}\par
233         printf({\cf22 "%d"}, {\cf17 sizeof}(NOG *));\par
234         {\cf20 // Iterates Table Fields for each table, since it can differ for every single one}\par
235         NOG *node_LCampos = t->LCampos->Inicio;\par
236         {\cf19 while} (node_LCampos) \{\par
237             total_memory += {\cf17 sizeof}(CAMPO) + {\cf17 sizeof}(NOG) +\par
238                             POINTERSIZE; {\cf20 // Each field is a Node with CAMPO as info and pointer to next node Total: 60+16+8=84Bytes}\par
239             node_LCampos = node_LCampos->Prox;\par
240         \}\par
241         {\cf20 //Iterates Entries, amount can also differ from table to table}\par
242         NOG *node_LRegistos = t->LRegistos->Inicio;\par
243         {\cf19 while} (node_LRegistos) \{\par
244             ListaGenerica *lregistos = node_LRegistos->Info;\par
245             total_memory += {\cf17 sizeof}(NOG);\par
246             NOG *row = lregistos->Inicio;\par
247             {\cf18 int} i = 1;\par
248             {\cf19 while} (row) \{\par
249                 total_memory += {\cf17 sizeof}(NOG) + (strlen(({\cf18 char} *) (row->Info)) + 1);\par
250                 i++;\par
251                 row = row->Prox;\par
252             \}\par
253             node_LRegistos = node_LRegistos->Prox;\par
254         \}\par
255         node = node->Prox;\par
256     \}\par
257 \par
258     printf({\cf22 "Memoria total da BD %ld BYTES \\n"}, total_memory);\par
259     {\cf19 return} total_memory;\par
260 \}\par
}
}
{\xe \v Memoria_Desperdicada_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Memoria_Desperdicada_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long int Memoria_Desperdicada_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows the wasted memory caused by fixed array size inside some structs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Bytes count of wasted memory \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 267                                                       \{\par
268     {\cf19 if} (!BD) {\cf19 return} -1;\par
269     {\cf18 long} wasted_memory = 0;\par
270     {\cf20 //Evaluate the memory used in BD head}\par
271     wasted_memory += (FIXED_SIZE_ARRAY - (strlen(BD->NOME_BDADOS) + 1));\par
272     wasted_memory += (FIXED_SIZE_ARRAY - (strlen(BD->VERSAO_BDADOS) + 1));\par
273     {\cf20 //Evaluate the memory in each ListTabelas - nome_tabela}\par
274     ListaGenerica *head = (ListaGenerica *) BD->LTabelas;\par
275     NOG *node = head->Inicio;\par
276     while (node) \{\par
277         TABELA *t = (TABELA *) node->Info;\par
278         wasted_memory += (FIXED_SIZE_ARRAY - (strlen(t->NOME_TABELA) + 1));  {\cf20 // cada tabela tem o nome a 50}\par
279         NOG *node_LCampos = t->LCampos->Inicio;\par
280         {\cf20 // Iterate the fields}\par
281         {\cf19 while} (node_LCampos) \{\par
282             CAMPO *c = (CAMPO *) node_LCampos->Info;\par
283             wasted_memory += (10 - (strlen(c->TIPO) + 1));\par
284             wasted_memory += (FIXED_SIZE_ARRAY - (strlen(c->NOME_CAMPO) + 1));\par
285             node_LCampos = node_LCampos->Prox;\par
286         \}\par
287         node = node->Prox;\par
288     \}\par
289     printf({\cf22 "Memoria desperdicada na BD %ld BYTES \\n"}, wasted_memory);\par
290     {\cf19 return} wasted_memory;\par
291 \}\par
}
}
{\xe \v Mostrar_BDados\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Mostrar_BDados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_BDados ({\b BDadosCoupe} *  {\i BD})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Shows all the tables inside the database }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{:pointer to the database \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                                      \{\par
187     {\cf19 if} (!BD){\cf19 return};\par
188     ListaGenerica *head = (ListaGenerica *) BD->LTabelas;\par
189     NOG *node = head->Inicio;\par
190     while (node) \{\par
191         TABELA *t = (TABELA *) node->Info;\par
192         Mostrar_Tabela(t);\par
193         node = node->Prox;\par
194     \}\par
195 \}\par
}
}
{\xe \v Mostrar_Tabela\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Mostrar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_Tabela ({\b TABELA} *  {\i T})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Show a table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{:Pointer for a table to print \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156                                \{\par
157     {\cf19 if} (!T) {\cf19 return};\par
158     {\cf20 //Print the hear}\par
159     printf({\cf22 "------------Tabela [%s]------------\\n"}, T->NOME_TABELA);\par
160     NOG *n = T->LCampos->Inicio;\par
161     {\cf19 while} (n) \{\par
162         CAMPO *c = (CAMPO *) n->Info;\par
163         printf({\cf22 "[%s] (%s)\\t"}, c->NOME_CAMPO, c->TIPO);\par
164         n = n->Prox;\par
165     \}\par
166     printf({\cf22 "\\n"});\par
167     {\cf20 //Print the body content}\par
168     NOG *registerListNode = T->LRegistos->Inicio;\par
169     {\cf19 while} (registerListNode) \{\par
170         ListaGenerica *ab = registerListNode->Info;\par
171         NOG *pointer = ab->Inicio;\par
172         {\cf19 while} (pointer) \{\par
173             printf({\cf22 "%s\\t\\t"}, ({\cf18 char} *) pointer->Info);\par
174             pointer = pointer->Prox;\par
175         \}\par
176         printf({\cf22 "\\n"});\par
177         registerListNode = registerListNode->Prox;\par
178     \}\par
179     printf({\cf22 "-----[A tabela contem %d registo(s)]-----\\n\\n"}, T->LRegistos->NEL);\par
180 \}\par
}
}
{\xe \v Mostrar_Tabela_NOME\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Mostrar_Tabela_NOME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mostrar_Tabela_NOME ({\b BDadosCoupe} *  {\i BD}, char *  {\i tabela})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shows to the user the content of the table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tabela} \cell }{: Pointer for a table to print \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 140                                                         \{\par
141     {\cf19 if} (!BD){\cf19 return};\par
142     {\cf19 if} (strlen(tabela) < 1) \{\par
143         printf({\cf22 "Nome da tabela invalido.Indique o nome da tabela!\\n"});\par
144         {\cf19 return};\par
145     \}\par
146     TABELA *t = Pesquisar_Tabela(BD, tabela);\par
147     {\cf19 if} (t != NULL) \{\par
148         Mostrar_Tabela(t);\par
149     \}\par
150 \}\par
}
}
{\xe \v Pesquisar_Tabela\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:Pesquisar_Tabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TABELA} * Pesquisar_Tabela ({\b BDadosCoupe} *  {\i BD}, char *  {\i nome_tabela})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Search a table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Database name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_tabela} \cell }{: Name of the table to search \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Table pointer - Case of success found\par
 :NULL - Case of fail \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114                                                              \{\par
115     {\cf19 if} (!BD){\cf19 return} NULL;\par
116     {\cf20 //Guard nome_tabela with at least one caracter}\par
117     {\cf19 if} (strlen(nome_tabela) < 1) \{\par
118         printf({\cf22 "Nome da tabela invalido.Indique o nome da tabela!\\n"});\par
119         {\cf19 return} NULL;\par
120     \}\par
121     {\cf20 //Iterate the list searching the table}\par
122     {\cf19 if} (BD->LTabelas->NEL) \{\par
123         NOG *n = BD->LTabelas->Inicio;\par
124         {\cf19 while} (n) \{\par
125             TABELA *t = (TABELA *) n->Info;\par
126             {\cf20 //Compare the name}\par
127             if (strcmp(nome_tabela, t->NOME_TABELA) == 0){\cf19 return} t;\par
128             n = n->Prox;\par
129         \}\par
130         {\cf19 return} NULL;\par
131     \}\par
132     {\cf19 return} NULL;\par
133 \}\par
}
}
{\xe \v SELECT\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SELECT ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i nome_campo}, char *  {\i valor_comparacao})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a select in a table with options. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to BD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{:Name of the table to perform the select \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure to run the filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo} \cell }{: Name of the field to match \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_comparacao} \cell }{: Value to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Prints the result to the user with affected rows \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 842                                                                                                                     \{\par
843 \par
844 \par
845     clock_t start, end;\par
846     start = clock();\par
847 \par
848     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
849     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
850     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
851     {\cf19 if} (!strlen(nome_campo)){\cf19 return} INSUCESSO;\par
852     {\cf19 if} (!strlen(valor_comparacao)){\cf19 return} INSUCESSO;\par
853 \par
854 \par
855     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
856     {\cf19 if} (table) \{\par
857         {\cf20 //Check if the nome campo exists}\par
858         NOG *field = table->LCampos->Inicio;\par
859         {\cf18 int} i = 0;\par
860         {\cf18 int} field_found = 0;\par
861         {\cf18 int} field_pos;\par
862         {\cf19 while} (field) \{\par
863             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo) == 0) \{\par
864                 field_found = 1;\par
865                 field_pos = i;\par
866                 {\cf19 break};\par
867             \}\par
868             i++;\par
869             field = field->Prox;\par
870         \}\par
871         {\cf19 if} (!field_found) \{\par
872             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
873             {\cf19 return} INSUCESSO;\par
874         \}\par
875 \par
876         {\cf20 //printf("Campo no indice %d\\n\\n", field_pos);}\par
877         showHeaderTable(table->LCampos->Inicio, {\cf22 "SELECT"});\par
878         {\cf18 int} register_count = 0;\par
879         {\cf20 //Pointer to the REGISTOS List}\par
880         NOG *node = table->LRegistos->Inicio;\par
881         {\cf19 while} (node) \{\par
882             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
883             {\cf18 int} pos = 0;\par
884             {\cf19 while} (p) \{\par
885                 {\cf19 if} (field_pos == pos) \{\par
886                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_comparacao)) \{\par
887                         register_count++;\par
888                         printResultNode(node);\par
889                     \}\par
890                 \}\par
891                 pos++;\par
892                 p = p->Prox;\par
893             \}\par
894             node = node->Prox;\par
895         \}\par
896         printf({\cf22 "Foram encontrados %d registos\\n"}, register_count);\par
897 \par
898     \}\par
899 \par
900     end = clock();\par
901     createStatistics(__FUNCTION__, start, end);\par
902     {\cf19 return} SUCESSO;\par
903 \}\par
}
}
{\xe \v UPDATE\:BDadosCoupe.h}
{\xe \v BDadosCoupe.h\:UPDATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int UPDATE ({\b BDadosCoupe} *  {\i BD}, char *  {\i _tabela}, int(*)(char *, char *)  {\i f_condicao}, char *  {\i campo_comp}, char *  {\i valor_campo_comp}, char *  {\i nome_campo_update}, char *  {\i valor_campo_update})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform a SQL UPDATE to the BD with somo options. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BD} \cell }{: Pointer to bD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _tabela} \cell }{: Name of the table to perfomr the query \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_condicao} \cell }{: User closure to filter \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo_comp} \cell }{: Name of the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_campo_comp} \cell }{: Value of the field \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome_campo_update} \cell }{: Name of field to update \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor_campo_update} \cell }{: Value to update \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1049                                                               \{\par
1050 \par
1051     clock_t start, end;\par
1052     start = clock();\par
1053 \par
1054     {\cf19 if} (!BD){\cf19 return} INSUCESSO;\par
1055     {\cf19 if} (!strlen(_tabela)){\cf19 return} INSUCESSO;\par
1056     {\cf19 if} (!f_condicao){\cf19 return} INSUCESSO;\par
1057     {\cf19 if} (!strlen(campo_comp)){\cf19 return} INSUCESSO;\par
1058     {\cf19 if} (!strlen(valor_campo_comp)){\cf19 return} INSUCESSO;\par
1059 \par
1060     TABELA *table = Pesquisar_Tabela(BD, _tabela);\par
1061     {\cf19 if} (table) \{\par
1062         {\cf20 //Check if the nome campo exists}\par
1063         NOG *field = table->LCampos->Inicio;\par
1064         {\cf18 int} i = 0;\par
1065         {\cf18 int} field_found = 0;\par
1066         {\cf18 int} field_pos = 0;\par
1067         {\cf19 while} (field) \{\par
1068             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, campo_comp) == 0) \{\par
1069                 field_found = 1;\par
1070                 field_pos = i;\par
1071                 {\cf19 break};\par
1072             \}\par
1073             i++;\par
1074             field = field->Prox;\par
1075         \}\par
1076         {\cf20 //Check if the nome_campo_update exists}\par
1077         i = 0;\par
1078         field_found = 0;\par
1079         {\cf18 int} field_update_pos = 0;\par
1080         field = table->LCampos->Inicio;\par
1081         {\cf19 while} (field) \{\par
1082             {\cf19 if} (strcmp(({\cf18 char} *) field->Info, nome_campo_update) == 0) \{\par
1083                 field_found = 1;\par
1084                 field_update_pos = i;\par
1085                 {\cf19 break};\par
1086             \}\par
1087             i++;\par
1088             field = field->Prox;\par
1089         \}\par
1090 \par
1091         {\cf19 if} (!field_found) \{\par
1092             printf({\cf22 "\\tNao foram encontrados registos com esse nome de campo!!!\\n"});\par
1093             {\cf19 return} INSUCESSO;\par
1094         \}\par
1095         printf({\cf22 "Campo aprocurar no indice %d\\n\\n"}, field_pos);\par
1096         printf({\cf22 "Campo a atualizar no indice %d\\n\\n"}, field_update_pos);\par
1097 \par
1098         showHeaderTable(table->LCampos->Inicio, {\cf22 "UPDATE"});\par
1099         {\cf18 int} register_count = 0;\par
1100         {\cf20 //Pointer to the REGISTOS List}\par
1101         NOG *node = table->LRegistos->Inicio;\par
1102         {\cf19 while} (node) \{\par
1103             NOG *p = ((REGISTO *) (node->Info))->Inicio;\par
1104             {\cf18 int} pos = 0;\par
1105             {\cf19 while} (p) \{\par
1106                 {\cf19 if} (field_pos == pos) \{\par
1107                     {\cf19 if} (f_condicao(({\cf18 char} *) p->Info, valor_campo_comp)) \{\par
1108                         updateREGISTER(node, field_update_pos, valor_campo_update);\par
1109                         register_count++;\par
1110                         printResultNode(node);\par
1111                     \}\par
1112                 \}\par
1113                 pos++;\par
1114                 p = p->Prox;\par
1115             \}\par
1116             node = node->Prox;\par
1117         \}\par
1118         printf({\cf22 "+------------------------------+\\n"});\par
1119         printf({\cf22 "Foram encontrado(s) %d registo(s)\\n"}, register_count);\par
1120 \par
1121     \} {\cf19 else} \{\par
1122         printf({\cf22 "Tabela nao encontrada!!!\\n"});\par
1123     \}\par
1124     end = clock();\par
1125     createStatistics(__FUNCTION__, start, end);\par
1126     {\cf19 return} SUCESSO;\par
1127 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BDadosCoupe.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.h}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/BDadosCoupe.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BDADOSCOUPE_H_INCLUDED}\par
2 {\cf21 #define BDADOSCOUPE_H_INCLUDED}\par
3 \par
4 {\cf21 #include <stdio.h>}\par
5 {\cf21 #include <stdlib.h>}\par
6 {\cf21 #include <string.h>}\par
7 \par
8 {\cf21 #include "ListaGenerica.h"}\par
9 \par
10 {\cf17 typedef} {\cf17 struct }\{\par
11     {\cf18 char} NOME_BDADOS[50];\par
12     {\cf18 char} VERSAO_BDADOS[50];\par
13     ListaGenerica *LTabelas;\par
14 \} BDadosCoupe;\par
15 \par
16 {\cf17 typedef} {\cf17 struct }\{\par
17     {\cf18 char} NOME_TABELA[50];\par
18     ListaGenerica *LCampos;\par
19     ListaGenerica *LRegistos;\par
20 \} TABELA;\par
21 \par
22 {\cf17 typedef} {\cf17 struct }\{\par
23     {\cf18 char} NOME_CAMPO[50];\par
24     {\cf18 char} TIPO[10];\par
25 \} CAMPO;\par
26 \par
27 {\cf21 #define REGISTO ListaGenerica}\par
28 \par
29 \par
30 {\cf20 //A) Criar a Base de dados;}\par
31 BDadosCoupe *Criar_BDados({\cf18 char} *nome_bd, {\cf18 char} *versao);\par
32 \par
33 {\cf20 //B) Criar uma Tabela na Base de Dados, a tabela deve ser inserida \'E0 lista de tabelas da BD}\par
34 TABELA *Criar_Tabela(BDadosCoupe *BD, {\cf18 char} *nome_tabela);\par
35 \par
36 {\cf20 //C)  Adicionar um campo a uma tabela.}\par
37 {\cf18 int} Add_Campo_Tabela(TABELA *T, {\cf18 char} *nome_campo, {\cf18 char} *tipo_campo);\par
38 \par
39 {\cf20 //D)    Adicionar dados(registos) a uma tabela, os dados s\'E3o dados numa string onde o separador \'E9 \'91;\'92m ex: Add_Valores_Tabela(T, \'93123;Joao;965654449\'94)}\par
40 {\cf18 int} Add_Valores_Tabela(TABELA *T, {\cf18 char} *dados);\par
41 \par
42 {\cf20 //E)    Adicionar dados(registos) a uma tabela, os dados s\'E3o dados numa string onde o separador \'E9 \'91;\'92}\par
43 {\cf18 int} Add_Valores_Tabela_BDados(BDadosCoupe *BD, {\cf18 char} *nome_tabela, {\cf18 char} *dados);\par
44 \par
45 {\cf20 //F)    Pesquisar uma Tabela da base de dados}\par
46 TABELA *Pesquisar_Tabela(BDadosCoupe *BD, {\cf18 char} *nome_tabela);\par
47 \par
48 {\cf20 //G)    Mostrar uma Tabela}\par
49 {\cf18 void} Mostrar_Tabela_NOME(BDadosCoupe *BD, {\cf18 char} *tabela);\par
50 \par
51 {\cf18 void} Mostrar_Tabela(TABELA *T);\par
52 \par
53 {\cf20 //H)    Mostrar toda a base de dados, dever\'E1 mostrar todas as Tabelas da BDados.}\par
54 {\cf18 void} Mostrar_BDados(BDadosCoupe *BD);\par
55 \par
56 {\cf20 //I)    Libertar toda a mem\'F3ria alocada pela base de dados.}\par
57 {\cf18 void} Destruir_BDados(BDadosCoupe *BD);\par
58 \par
59 {\cf20 //J)    Mem\'F3ria ocupada por toda a base de dados.}\par
60 {\cf18 long} {\cf18 int} Memoria_BDados(BDadosCoupe *BD);\par
61 \par
62 {\cf18 long} {\cf18 int} Memoria_Desperdicada_BDados(BDadosCoupe *BD);\par
63 \par
64 {\cf20 //K)    Exportar/Importar para/de Ficheiro (o retorno destas fun\'E7\'F5es, permite saber se a fun\'E7\'E3o foi bem/mal-executada!):}\par
65 {\cf18 int} Exportar_Tabela_BDados_Excel(BDadosCoupe *BD, {\cf18 char} *tabela, {\cf18 char} *ficheir_csv);\par
66 \par
67 {\cf18 int} Exportar_BDados_Excel(BDadosCoupe *BD, {\cf18 char} *ficheir_csv);\par
68 \par
69 {\cf18 int} Importar_BDados_Excel(BDadosCoupe *BD, {\cf18 char} *ficheir_csv);\par
70 \par
71 {\cf18 int} Exportar_BDados_Ficheiro_Binario(BDadosCoupe *BD, {\cf18 char} *fich_dat);\par
72 \par
73 {\cf18 int} Importar_BDados_Ficheiro_Binario(BDadosCoupe *BD, {\cf18 char} *fich_dat);\par
74 \par
75 {\cf20 //L)    Apagar o conte\'FAdo de uma Tabela. A Tabela continua a existir na BDados, mas n\'E3o cont\'E9m os dados, ou seja, os campos continuam, mas os registos s\'E3o eliminados.}\par
76 {\cf18 int} DELETE_TABLE_DATA(TABELA *T);\par
77 \par
78 {\cf18 int} DELETE_TABLE_FIELDS(TABELA *T);\par
79 \par
80 {\cf20 //M)    Apagar o conte\'FAdo de uma Tabela e remove a tabela da base de dados.}\par
81 {\cf18 int} DROP_TABLE(BDadosCoupe *BD, {\cf18 char} *nome_tabela);\par
82 \par
83 {\cf20 //N)    Selecionar (Apresentar no ecran!) da base de dados todos os registos que obede\'E7am a uma dada condi\'E7\'E3o, a fun\'E7\'E3o deve retornar o n\'FAmero de registos selecionados. (Ter em aten\'E7\'E3o o exemplo das aulas te\'F3ricas!). Nota: esta \'E9 certamente a funcionalidade mais usada num sistema de base de dados\'85, por isso se estiver bem otimizada\'85. O utilizador agradece!!!!}\par
84 {\cf18 int} SELECT(BDadosCoupe *BD, {\cf18 char} *_tabela, {\cf18 int} (*f_condicao)({\cf18 char} *, {\cf18 char} *), {\cf18 char} *nome_campo, {\cf18 char} *valor_comparacao);\par
85 \par
86 {\cf20 //O)    Remover todos os registos que obede\'E7am a uma dada condi\'E7\'E3o, a fun\'E7\'E3o deve retornar o n\'FAmero de registos removidos.}\par
87 {\cf18 int} DELETE(BDadosCoupe *BD, {\cf18 char} *_tabela, {\cf18 int} (*f_condicao)({\cf18 char} *, {\cf18 char} *), {\cf18 char} *nome_campo, {\cf18 char} *valor_comparacao);\par
88 \par
89 {\cf20 //P)    Atualizar todos os registos da tabela onde o Campo \'E9 dado, que obede\'E7am a uma dada condi\'E7\'E3o, a fun\'E7\'E3o deve retornar o n\'FAmero de registos que foram atualizados.}\par
90 {\cf18 int} UPDATE(BDadosCoupe *BD, {\cf18 char} *_tabela, {\cf18 int} (*f_condicao)({\cf18 char} *, {\cf18 char} *), {\cf18 char} *campo_comp, {\cf18 char} *valor_campo_comp,\par
91            {\cf18 char} *nome_campo_update, {\cf18 char} *valor_campo_update);\par
92 \par
93 {\cf21 #endif }{\cf20 // BDADOSCOUPE_H_INCLUDED}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.c}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.c}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ListaGenerica.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaGenerica} * {\b CriarLG} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirLG} ({\b ListaGenerica} *L, void(*func)(void *))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AddLG} ({\b ListaGenerica} *L, void *X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MostrarLG} ({\b ListaGenerica} *L, void(*fshow)(void *))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AddLG\:ListaGenerica.c}
{\xe \v ListaGenerica.c\:AddLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AddLG ({\b ListaGenerica} *  {\i L}, void *  {\i X})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i L} \cell }{:Generic List \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i X} \cell }{: !Info! of the Node that will be added to the end of list \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: SUCESSO or INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                      \{\par
32     {\cf19 if} (!L){\cf19 return} INSUCESSO;\par
33     {\cf19 if} (!X){\cf19 return} INSUCESSO;\par
34     {\cf19 if} (L->Inicio == NULL) \{\par
35         {\cf20 //List is empty.Add to begin}\par
36         NOG *node = (NOG *) malloc({\cf17 sizeof}(NOG));\par
37         node->Prox = NULL;\par
38         node->Info = X;\par
39         L->Inicio = node;\par
40         L->NEL++;\par
41         L->Fim = L->Inicio;\par
42     \} {\cf19 else} \{\par
43         {\cf20 //Add the Node to the end}\par
44         NOG *node = L->Inicio;\par
45         {\cf20 //find the end of the list}\par
46         {\cf19 while} (node->Prox) \{\par
47             node = node->Prox;\par
48         \}\par
49         {\cf20 //Create the next Node}\par
50         NOG *next = (NOG *) malloc({\cf17 sizeof}(NOG));\par
51         next->Prox = NULL;\par
52         next->Info = X;\par
53         node->Prox = next;\par
54         L->NEL++;\par
55     \}\par
56     {\cf19 return} SUCESSO;\par
57 \}\par
}
}
{\xe \v CriarLG\:ListaGenerica.c}
{\xe \v ListaGenerica.c\:CriarLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaGenerica} * CriarLG ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                          \{\par
5     ListaGenerica *L = (ListaGenerica *) malloc({\cf17 sizeof}(ListaGenerica));\par
6     L->Inicio = NULL;\par
7     L->NEL = 0;\par
8     {\cf19 return} L;\par
9 \}\par
}
}
{\xe \v DestruirLG\:ListaGenerica.c}
{\xe \v ListaGenerica.c\:DestruirLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirLG ({\b ListaGenerica} *  {\i L}, void(*)(void *)  {\i func})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                         \{\par
12     {\cf19 if} (!L) {\cf19 return};\par
13     {\cf19 if} (!func) {\cf19 return};\par
14     NOG *node = L->Inicio;\par
15     NOG *Aux = NULL;\par
16     {\cf19 while} (node) \{\par
17         Aux = node->Prox;\par
18         {\cf19 if} (func != NULL) func(node->Info);\par
19         free(node);\par
20         node = Aux;\par
21     \}\par
22     free(L);\par
23 \}\par
}
}
{\xe \v MostrarLG\:ListaGenerica.c}
{\xe \v ListaGenerica.c\:MostrarLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MostrarLG ({\b ListaGenerica} *  {\i L}, void(*)(void *)  {\i fshow})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                         \{\par
60     {\cf19 if} (!L) \{\par
61         printf({\cf22 "%s"}, {\cf22 "List vazia\\n"});\par
62         {\cf19 return};\par
63     \}\par
64     fshow(L);\par
65 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.h}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.h}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b NOG}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ListaGenerica}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SUCESSO}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INSUCESSO}\~ 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b NOG} {\b NOG}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaGenerica} * {\b CriarLG} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirLG} ({\b ListaGenerica} *L, void(*func)(void *))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AddLG} ({\b ListaGenerica} *L, void *X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MostrarLG} ({\b ListaGenerica} *L, void(*fshow)(void *))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v INSUCESSO\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:INSUCESSO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INSUCESSO\~ 0}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SUCESSO\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:SUCESSO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SUCESSO\~ 1}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v NOG\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:NOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b NOG} {\b NOG}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AddLG\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:AddLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AddLG ({\b ListaGenerica} *  {\i L}, void *  {\i X})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i L} \cell }{:Generic List \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i X} \cell }{: !Info! of the Node that will be added to the end of list \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: SUCESSO or INSUCESSO \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                      \{\par
32     {\cf19 if} (!L){\cf19 return} INSUCESSO;\par
33     {\cf19 if} (!X){\cf19 return} INSUCESSO;\par
34     {\cf19 if} (L->Inicio == NULL) \{\par
35         {\cf20 //List is empty.Add to begin}\par
36         NOG *node = (NOG *) malloc({\cf17 sizeof}(NOG));\par
37         node->Prox = NULL;\par
38         node->Info = X;\par
39         L->Inicio = node;\par
40         L->NEL++;\par
41         L->Fim = L->Inicio;\par
42     \} {\cf19 else} \{\par
43         {\cf20 //Add the Node to the end}\par
44         NOG *node = L->Inicio;\par
45         {\cf20 //find the end of the list}\par
46         {\cf19 while} (node->Prox) \{\par
47             node = node->Prox;\par
48         \}\par
49         {\cf20 //Create the next Node}\par
50         NOG *next = (NOG *) malloc({\cf17 sizeof}(NOG));\par
51         next->Prox = NULL;\par
52         next->Info = X;\par
53         node->Prox = next;\par
54         L->NEL++;\par
55     \}\par
56     {\cf19 return} SUCESSO;\par
57 \}\par
}
}
{\xe \v CriarLG\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:CriarLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaGenerica} * CriarLG ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                          \{\par
5     ListaGenerica *L = (ListaGenerica *) malloc({\cf17 sizeof}(ListaGenerica));\par
6     L->Inicio = NULL;\par
7     L->NEL = 0;\par
8     {\cf19 return} L;\par
9 \}\par
}
}
{\xe \v DestruirLG\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:DestruirLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirLG ({\b ListaGenerica} *  {\i L}, void(*)(void *)  {\i func})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                         \{\par
12     {\cf19 if} (!L) {\cf19 return};\par
13     {\cf19 if} (!func) {\cf19 return};\par
14     NOG *node = L->Inicio;\par
15     NOG *Aux = NULL;\par
16     {\cf19 while} (node) \{\par
17         Aux = node->Prox;\par
18         {\cf19 if} (func != NULL) func(node->Info);\par
19         free(node);\par
20         node = Aux;\par
21     \}\par
22     free(L);\par
23 \}\par
}
}
{\xe \v MostrarLG\:ListaGenerica.h}
{\xe \v ListaGenerica.h\:MostrarLG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MostrarLG ({\b ListaGenerica} *  {\i L}, void(*)(void *)  {\i fshow})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                         \{\par
60     {\cf19 if} (!L) \{\par
61         printf({\cf22 "%s"}, {\cf22 "List vazia\\n"});\par
62         {\cf19 return};\par
63     \}\par
64     fshow(L);\par
65 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListaGenerica.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.h}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/ListaGenerica.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTAGENERICA_H_INCLUDED}\par
2 {\cf21 #define LISTAGENERICA_H_INCLUDED}\par
3 \par
4 {\cf21 #include <stdio.h>}\par
5 {\cf21 #include <stdlib.h>}\par
6 \par
7 {\cf21 #define SUCESSO   1}\par
8 {\cf21 #define INSUCESSO 0}\par
9 \par
10 {\cf17 typedef} {\cf17 struct }NOG \{\par
11     {\cf18 void} *Info;\par
12     {\cf17 struct }NOG *Prox;\par
13 \} NOG;\par
14 \par
15 {\cf17 typedef} {\cf17 struct }\{\par
16     NOG *Inicio;\par
17     {\cf20 //To improve performance implement Fim for fast inserts}\par
18     NOG *Fim;\par
19     {\cf18 int} NEL;\par
20 \}  ListaGenerica;\par
21 \par
22 ListaGenerica *CriarLG();\par
23 \par
24 {\cf18 void} DestruirLG(ListaGenerica *L, {\cf18 void} (*func)({\cf18 void} *));\par
25 \par
26 {\cf18 int} AddLG(ListaGenerica *L, {\cf18 void} *X);\par
27 \par
28 {\cf18 void} MostrarLG(ListaGenerica *L, {\cf18 void} (*fshow)({\cf18 void} *));\par
29 \par
30 \par
31 {\cf21 #endif }{\cf20 // LISTAGENERICA_H_INCLUDED}\par
32 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Hugo Santos/CLionProjects/TP_FINAL/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/main.c}
{\xe \v C:/Users/Hugo Santos/CLionProjects/TP_FINAL/main.c}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include "BDadosCoupe.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MIN_MENU}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_MENU}\~ 12\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b menu_principal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showTableFields} (void *list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showTableHeader} (void *list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b equalMatch} (char *value1, char *value2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b greaterThen} (char *value1, char *value2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lessThen} (char *value1, char *value2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showTableData} (void *list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAX_MENU\:main.c}
{\xe \v main.c\:MAX_MENU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_MENU\~ 12}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_MENU\:main.c}
{\xe \v main.c\:MIN_MENU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MIN_MENU\~ 0}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v equalMatch\:main.c}
{\xe \v main.c\:equalMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int equalMatch (char *  {\i value1}, char *  {\i value2})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                            \{\par
75     {\cf19 if} (value1 == NULL || value2 == NULL) {\cf19 return} 0;\par
76     {\cf19 return} !strcmp(value1, value2);\par
77 \}\par
}
}
{\xe \v greaterThen\:main.c}
{\xe \v main.c\:greaterThen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int greaterThen (char *  {\i value1}, char *  {\i value2})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                             \{\par
80     {\cf19 if} (value1 == NULL || value2 == NULL) {\cf19 return} 0;\par
81     {\cf18 int} num_1 = atoi(value1);\par
82     {\cf18 int} num_2 = atoi(value2);\par
83     {\cf19 return} num_1 > num_2;\par
84 \}\par
}
}
{\xe \v lessThen\:main.c}
{\xe \v main.c\:lessThen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lessThen (char *  {\i value1}, char *  {\i value2})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                          \{\par
87     {\cf19 if} (value1 == NULL || value2 == NULL) {\cf19 return} 0;\par
88     {\cf18 int} num_1 = atoi(value1);\par
89     {\cf18 int} num_2 = atoi(value2);\par
90     {\cf19 return} num_1 < num_2;\par
91 \}\par
}
}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114            \{\par
115 \par
116     {\cf20 //Instanciate BD}\par
117     BDadosCoupe *BD = Criar_BDados({\cf22 "BD-Banco"}, {\cf22 "Versao-1.0"});\par
118 \par
119     {\cf20 //Buffers for user input}\par
120     {\cf18 char} user_input_buffer1[50];\par
121     {\cf18 char} user_input_buffer2[50];\par
122     {\cf18 char} user_input_buffer3[50];\par
123     {\cf18 char} user_input_buffer4[50];\par
124     {\cf18 int} condicao = -1;\par
125 \par
126     TABELA *t = NULL;\par
127 \par
128 \par
129     {\cf19 for} (;;) \{\par
130         {\cf20 //system("cls");}\par
131         {\cf19 switch} (menu_principal()) \{\par
132             {\cf19 case} 1:\par
133                 printf({\cf22 "%s\\n"}, BD->NOME_BDADOS);\par
134                 printf({\cf22 "%s\\n"}, BD->VERSAO_BDADOS);\par
135                 Mostrar_BDados(BD);\par
136                 {\cf19 break};\par
137             {\cf19 case} 2:\par
138                 printf({\cf22 "Qual o nome da tabela que deseja criar?\\n"});\par
139                 fflush(stdin);\par
140                 scanf({\cf22 "%s"}, user_input_buffer1);\par
141                 Criar_Tabela(BD, strupr(user_input_buffer1));\par
142                 system({\cf22 "cls"});\par
143                 Mostrar_BDados(BD);\par
144                 {\cf19 break};\par
145             {\cf19 case} 3:\par
146                 showTableHeader(BD->LTabelas);\par
147                 printf({\cf22 "Qual tabela deseja pesquisar?\\n"});\par
148                 fflush(stdin);\par
149                 scanf({\cf22 "%s"}, user_input_buffer1);\par
150                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
151                 Mostrar_Tabela(t);\par
152                 {\cf19 if} (!t) \{\par
153                     printf({\cf22 "Tabela nao encontrada!\\n"});\par
154                     {\cf19 break};\par
155                 \}\par
156                 {\cf19 break};\par
157             {\cf19 case} 4:\par
158                 printf({\cf22 "Qual o nome da tabela onde deseja adicionar campos?\\n"});\par
159                 fflush(stdin);\par
160                 scanf({\cf22 "%s"}, user_input_buffer1);\par
161                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
162                 {\cf19 if} (!t) \{\par
163                     printf({\cf22 "Tabela nao encontrada!\\n"});\par
164                     {\cf19 break};\par
165                 \}\par
166                 printf({\cf22 "Qual o nome do campo a adicionar?\\n"});\par
167                 fflush(stdin);\par
168                 scanf({\cf22 "%s"}, user_input_buffer1);\par
169                 printf({\cf22 "Qual o tipo de dados? criar? (INT) (STRING) (FLOAT)\\n"});\par
170                 fflush(stdin);\par
171                 scanf({\cf22 "%s"}, user_input_buffer2);\par
172                 Add_Campo_Tabela(t, strupr(user_input_buffer1), strupr(user_input_buffer2));\par
173 \par
174                 {\cf19 break};\par
175             {\cf19 case} 5:\par
176                 printf({\cf22 "Qual a tabela que pretende adicionar registos?\\n"});\par
177                 fflush(stdin);\par
178                 scanf({\cf22 "%s"}, user_input_buffer1);\par
179                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
180                 {\cf19 if} (!t) \{\par
181                     printf({\cf22 "Tabela nao encontrada!"});\par
182                     {\cf19 break};\par
183                 \}\par
184                 Mostrar_Tabela(t);\par
185                 printf({\cf22 "Indique os dados separados por ; ?\\n"});\par
186                 fflush(stdin);\par
187                 scanf({\cf22 "%s"}, user_input_buffer1);\par
188                 Add_Valores_Tabela(t, user_input_buffer1);\par
189                 Mostrar_Tabela(t);\par
190 \par
191                 {\cf19 break};\par
192             {\cf19 case} 6:\par
193                 showTableHeader(BD->LTabelas);\par
194                 printf({\cf22 "Qual a tabela que pretende?\\n"});\par
195                 fflush(stdin);\par
196                 scanf({\cf22 "%s"}, user_input_buffer1);\par
197 \par
198                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
199                 {\cf19 if} (!t) \{\par
200                     printf({\cf22 "Tabela nao encontrada!"});\par
201                     {\cf19 break};\par
202                 \}\par
203                 Mostrar_Tabela(t);\par
204 \par
205                 printf({\cf22 "Qual o Campo a filtrar?\\n"});\par
206                 fflush(stdin);\par
207                 scanf({\cf22 "%s"}, strupr(user_input_buffer1));\par
208                 printf({\cf22 "Qual o Valor a comparar?\\n"});\par
209                 fflush(stdin);\par
210                 scanf({\cf22 "%s"}, user_input_buffer2);\par
211                 printf({\cf22 "Qual a condicao a aplicar?\\n"});\par
212                 printf({\cf22 "1- Menor que ||  2- Igual a || 3- Maior que\\n"});\par
213                 fflush(stdin);\par
214                 scanf({\cf22 "%d"}, &condicao);\par
215                 {\cf20 // Nested switch}\par
216                 {\cf19 switch} (condicao) \{\par
217                     {\cf19 case} 1:\par
218                         {\cf20 //SELECT(BD, "CLIENTES",equalMatch,"NOME","Hugo");}\par
219                         SELECT(BD, t->NOME_TABELA, lessThen, strupr(user_input_buffer1), user_input_buffer2);\par
220                         {\cf19 break};\par
221                     {\cf19 case} 2:\par
222                         SELECT(BD, t->NOME_TABELA, equalMatch, strupr(user_input_buffer1), user_input_buffer2);\par
223                         {\cf19 break};\par
224                     {\cf19 case} 3:\par
225                         SELECT(BD, t->NOME_TABELA, greaterThen, strupr(user_input_buffer1), user_input_buffer2);\par
226                         {\cf19 break};\par
227                     {\cf19 default}:\par
228                         printf({\cf22 "Erro!\\n"});\par
229                         {\cf19 break};\par
230                 \}\par
231                 {\cf19 break};\par
232             {\cf19 case} 7:\par
233                 showTableHeader(BD->LTabelas);\par
234                 printf({\cf22 "Qual a tabela que pretende?\\n"});\par
235                 fflush(stdin);\par
236                 scanf({\cf22 "%s"}, user_input_buffer1);\par
237                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
238                 {\cf19 if} (!t) \{\par
239                     printf({\cf22 "Tabela nao encontrada!"});\par
240                     {\cf19 break};\par
241                 \}\par
242                 Mostrar_Tabela(t);\par
243                 {\cf20 //int condicao;}\par
244                 printf({\cf22 "Indique um campo do registo que pretende alterar?\\n"});\par
245                 fflush(stdin);\par
246                 scanf({\cf22 "%s"}, user_input_buffer1);\par
247                 printf({\cf22 "Qual o valor do registo nesse campo?\\n"});\par
248                 fflush(stdin);\par
249                 scanf({\cf22 "%s"}, user_input_buffer3);\par
250 \par
251                 printf({\cf22 "Qual a condicao a aplicar?\\n"});\par
252                 printf({\cf22 "1- Menor que ||  2- Igual a || 3- Maior que\\n"});\par
253                 fflush(stdin);\par
254                 scanf({\cf22 "%d"}, &condicao);\par
255 \par
256                 printf({\cf22 "Indique que campo pretende alterar?\\n"});\par
257                 fflush(stdin);\par
258                 scanf({\cf22 "%s"}, user_input_buffer2);\par
259 \par
260                 printf({\cf22 "Indique o novo valor do registo?\\n"});\par
261                 fflush(stdin);\par
262                 scanf({\cf22 "%s"}, user_input_buffer4);\par
263                 {\cf20 // Nested switch}\par
264                 {\cf19 switch} (condicao) \{\par
265                     {\cf19 case} 1:\par
266                         UPDATE(BD, t->NOME_TABELA, lessThen, strupr(user_input_buffer1), user_input_buffer3,\par
267                                strupr(user_input_buffer2), user_input_buffer4);\par
268                         {\cf19 break};\par
269                     {\cf19 case} 2:\par
270                         UPDATE(BD, t->NOME_TABELA, equalMatch, strupr(user_input_buffer1), user_input_buffer3,\par
271                                strupr(user_input_buffer2), user_input_buffer4);\par
272                         {\cf19 break};\par
273                     {\cf19 case} 3:\par
274                         UPDATE(BD, t->NOME_TABELA, greaterThen, strupr(user_input_buffer1), user_input_buffer3,\par
275                                strupr(user_input_buffer2), user_input_buffer4);\par
276                         {\cf19 break};\par
277                     {\cf19 default}:\par
278                         printf({\cf22 "Erro!\\n"});\par
279                         {\cf19 break};\par
280                 \}\par
281                 {\cf19 break};\par
282             {\cf19 case} 8:\par
283                 showTableHeader(BD->LTabelas);\par
284                 printf({\cf22 "Qual a tabela que pretende?\\n"});\par
285                 fflush(stdin);\par
286                 scanf({\cf22 "%s"}, user_input_buffer1);\par
287                 t = Pesquisar_Tabela(BD, strupr(user_input_buffer1));\par
288                 {\cf19 if} (!t) \{\par
289                     printf({\cf22 "Tabela nao encontrada!"});\par
290                     {\cf19 break};\par
291                 \}\par
292                 Mostrar_Tabela(t);\par
293                 printf({\cf22 "Indique um Campo para filtrar registos?\\n"});\par
294                 fflush(stdin);\par
295                 scanf({\cf22 "%s"}, user_input_buffer1);\par
296                 printf({\cf22 "Qual o Valor a filtrar?\\n"});\par
297                 fflush(stdin);\par
298                 scanf({\cf22 "%s"}, user_input_buffer2);\par
299                 printf({\cf22 "Qual a condicao a aplicar?\\n"});\par
300                 printf({\cf22 "1- Menor que ||  2- Igual a || 3- Maior que\\n"});\par
301                 fflush(stdin);\par
302                 scanf({\cf22 "%d"}, &condicao);\par
303                 {\cf20 // Nested switch}\par
304                 {\cf19 switch} (condicao) \{\par
305                     {\cf19 case} 1:\par
306                         DELETE(BD, t->NOME_TABELA, lessThen, strupr(user_input_buffer1), user_input_buffer2);\par
307                         {\cf19 break};\par
308                     {\cf19 case} 2:\par
309                         DELETE(BD, t->NOME_TABELA, equalMatch, strupr(user_input_buffer1), user_input_buffer2);\par
310                         {\cf19 break};\par
311                     {\cf19 case} 3:\par
312                         DELETE(BD, t->NOME_TABELA, greaterThen, strupr(user_input_buffer1), user_input_buffer2);\par
313                         {\cf19 break};\par
314                     {\cf19 default}:\par
315                         printf({\cf22 "Erro!\\n"});\par
316                         {\cf19 break};\par
317                 \}\par
318                 {\cf19 break};\par
319             {\cf19 case} 9:\par
320                 Memoria_BDados(BD);\par
321                 Memoria_Desperdicada_BDados(BD);\par
322                 {\cf19 break};\par
323             {\cf19 case} 10:\par
324                 printf({\cf22 "Escolha um tipo de ficheiro\\n"});\par
325                 printf({\cf22 "1- Exportar para fExcel || 2- Exportar para fBinario\\n"});\par
326                 fflush(stdin);\par
327                 {\cf20 // int option;}\par
328                 scanf({\cf22 "%d"}, &condicao);\par
329                 {\cf20 // Nested switch}\par
330                 {\cf19 switch} (condicao) \{\par
331                     {\cf19 case} 1:\par
332                         printf({\cf22 "Insira o nome do ficheiro a criar/atualizar\\n"});\par
333                         fflush(stdin);\par
334                         scanf({\cf22 "%s"}, user_input_buffer1);\par
335                         {\cf19 if} (Exportar_BDados_Excel(BD, user_input_buffer1)) \{\par
336                             printf({\cf22 "Exportado com Sucesso\\n"});\par
337                         \} {\cf19 else} \{\par
338                             printf({\cf22 "Erro ao exportar !!!\\n"});\par
339                         \}\par
340 \par
341                         {\cf19 break};\par
342                     {\cf19 case} 2:\par
343                         printf({\cf22 "Insira o nome do ficheiro a criar/atualizar\\n"});\par
344                         fflush(stdin);\par
345                         scanf({\cf22 "%s"}, user_input_buffer1);\par
346                         {\cf19 if} (Exportar_BDados_Ficheiro_Binario(BD, user_input_buffer1)) \{\par
347                             printf({\cf22 "Exportado com Sucesso\\n"});\par
348                         \} {\cf19 else} \{\par
349                             printf({\cf22 "Erro ao exportar !!!\\n"});\par
350                         \}\par
351 \par
352                         {\cf19 break};\par
353                     {\cf19 default}:\par
354                         printf({\cf22 "Erro!\\n"});\par
355                         {\cf19 break};\par
356                 \}\par
357                 {\cf19 break};\par
358             {\cf19 case} 11:\par
359                 printf({\cf22 "Escolha um tipo de ficheiro\\n"});\par
360                 printf({\cf22 "1- Importar de fExcel || 2- Importar de fBinario\\n"});\par
361                 fflush(stdin);\par
362                 scanf({\cf22 "%d"}, &condicao);\par
363                 {\cf20 // Nested switch}\par
364                 {\cf19 switch} (condicao) \{\par
365                     {\cf19 case} 1:\par
366                         printf({\cf22 "Insira o nome do ficheiro a importar\\n"});\par
367                         fflush(stdin);\par
368                         scanf({\cf22 "%s"}, user_input_buffer1);\par
369                         {\cf19 if} (Importar_BDados_Excel(BD, user_input_buffer1)) \{\par
370                             printf({\cf22 "Importado com Sucesso, Mostrando BD\\n"});\par
371                             Mostrar_BDados(BD);\par
372                         \}{\cf19 else}\{\par
373                             printf({\cf22 "Erro ao importar o ficheiro\\n"});\par
374                         \}\par
375                         {\cf19 break};\par
376                     {\cf19 case} 2:\par
377                         printf({\cf22 "Insira o nome do ficheiro a importar\\n"});\par
378                         fflush(stdin);\par
379                         scanf({\cf22 "%s"}, user_input_buffer1);\par
380                         {\cf19 if} (Importar_BDados_Ficheiro_Binario(BD, user_input_buffer1)) \{\par
381                             printf({\cf22 "Importado com Sucesso, Mostrando BD\\n"});\par
382                             Mostrar_BDados(BD);\par
383                         \}\par
384 \par
385                         {\cf19 break};\par
386                     {\cf19 default}:\par
387                         printf({\cf22 "Erro\\n"});\par
388                         {\cf19 break};\par
389                 \}\par
390                 {\cf19 break};\par
391             {\cf19 case} 12:\par
392                 showTableHeader(BD->LTabelas);\par
393                 printf({\cf22 "Escolha a tabela que pretende exportar\\n"});\par
394                 fflush(stdin);\par
395                 scanf({\cf22 "%s"}, user_input_buffer1);\par
396                 fflush(stdin);\par
397                 printf({\cf22 "Qual o nome do ficheiro a exportar?\\n"});\par
398                 scanf({\cf22 "%s"}, user_input_buffer2);\par
399                 {\cf19 if} (Exportar_Tabela_BDados_Excel(BD, strupr(user_input_buffer1), user_input_buffer2)) \{\par
400                     printf({\cf22 "Exportado com Sucesso, Mostrando BD\\n"});\par
401                 \}\par
402                 {\cf19 break};\par
403             {\cf19 case} 0:\par
404                 Destruir_BDados(BD);\par
405                 exit(0);    {\cf20 // Fim do Programa}\par
406                 {\cf19 break};\par
407         \} {\cf20 // END switch (menu_principal())}\par
408         {\cf20 //system("pause");}\par
409         fflush(stdin);\par
410     \}\par
411 \}\par
}
}
{\xe \v menu_principal\:main.c}
{\xe \v main.c\:menu_principal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int menu_principal ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                      \{\par
11     {\cf18 int} x;\par
12     printf({\cf22 "\\n\\n# MENU PRINCIPAL ------------------------------------------#"});\par
13     printf({\cf22 "\\n| (1) Mostrar Base de Dados                                |"});\par
14     printf({\cf22 "\\n| (2) Criar Tabela                                         |"});\par
15     printf({\cf22 "\\n| (3) Mostrar Tabela                                       |"});\par
16     printf({\cf22 "\\n| (4) Adicionar Campo tabela                               |"});\par
17     printf({\cf22 "\\n| (5) Adicionar Registos tabela                            |"});\par
18     printf({\cf22 "\\n| (6) Select Registos                                      |"});\par
19     printf({\cf22 "\\n| (7) Update de Registos                                   |"});\par
20     printf({\cf22 "\\n| (8) Apagar Registos                                      |"});\par
21     printf({\cf22 "\\n| (9) Memoria total/desperdicada                           |"});\par
22     printf({\cf22 "\\n| (10) Exportar Base de Dados                              |"});\par
23     printf({\cf22 "\\n| (11) Importar Base de Dados                              |"});\par
24     printf({\cf22 "\\n| (12) Exportar Tabela                                     |"});\par
25     printf({\cf22 "\\n| -------------------------------------------------------- |"});\par
26     printf({\cf22 "\\n|       (0) SAIR                                           |"});\par
27     printf({\cf22 "\\n#----------------------------------------------------------#\\n"});\par
28     fflush(stdin);\par
29     {\cf19 do} \{\par
30 \par
31         printf({\cf22 "\\n  Qual a sua opcao ? "});\par
32         fflush(stdin);\par
33         scanf({\cf22 "%d"}, &x);\par
34     \} {\cf19 while} (x < MIN_MENU || x > MAX_MENU);\par
35     {\cf19 return} x;\par
36 \}\par
}
}
{\xe \v showTableData\:main.c}
{\xe \v main.c\:showTableData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showTableData (void *  {\i list})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 94                                \{\par
95     {\cf19 if} (!list){\cf19 return};\par
96     ListaGenerica *temp = (ListaGenerica *) list;\par
97     {\cf19 if} (!temp->NEL) {\cf19 return};\par
98     NOG *n = temp->Inicio;\par
99     printf({\cf22 "+---------Conteudo Tabela--------+\\n"});\par
100     printf({\cf22 "| ID             | Conteudo         |\\n"});\par
101     {\cf19 while} (n) \{\par
102         NOG *p = ((ListaGenerica *) (n->Info))->Inicio;\par
103         {\cf19 while} (p) \{\par
104             printf({\cf22 "%s\\t\\t"}, ({\cf18 char} *) p->Info);\par
105             p = p->Prox;\par
106         \}\par
107         printf({\cf22 "\\n"});\par
108         n = n->Prox;\par
109     \}\par
110     printf({\cf22 "+----------------+--------------+\\n"});\par
111 \par
112 \}\par
}
}
{\xe \v showTableFields\:main.c}
{\xe \v main.c\:showTableFields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showTableFields (void *  {\i list})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                  \{\par
40     {\cf19 if} (!list){\cf19 return};\par
41     ListaGenerica *temp = (ListaGenerica *) list;\par
42     NOG *n = temp->Inicio;\par
43     {\cf19 if} (!temp->NEL) {\cf19 return};\par
44     printf({\cf22 "+----------------+--------------+\\n"});\par
45     printf({\cf22 "| Field          | Type         |\\n"});\par
46     printf({\cf22 "+----------------+--------------+\\n"});\par
47     {\cf19 while} (n) \{\par
48         CAMPO *c = (CAMPO *) n->Info;\par
49         printf({\cf22 "| %s\\t\\t| %s\\t\\t|\\n"}, c->NOME_CAMPO, c->TIPO);\par
50         n = n->Prox;\par
51     \}\par
52     printf({\cf22 "+----------------+--------------+\\n"});\par
53 \par
54 \}\par
}
}
{\xe \v showTableHeader\:main.c}
{\xe \v main.c\:showTableHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showTableHeader (void *  {\i list})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                  \{\par
57     {\cf19 if} (!list){\cf19 return};\par
58     ListaGenerica *temp = (ListaGenerica *) list;\par
59     NOG *n = temp->Inicio;\par
60     {\cf19 if} (!temp->NEL) {\cf19 return};\par
61     printf({\cf22 "+----------------+--------------+\\n"});\par
62     printf({\cf22 "|      Tabelas na Base de Dados  |\\n"});\par
63     printf({\cf22 "+----------------+--------------+\\n"});\par
64     {\cf19 while} (n) \{\par
65         TABELA *t = n->Info;\par
66         printf({\cf22 "| %s\\t\\t\\t|\\n"}, ({\cf18 char} *) t->NOME_TABELA);\par
67         n = n->Prox;\par
68     \}\par
69     printf({\cf22 "+----------------+--------------+\\n"});\par
70 \par
71 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
